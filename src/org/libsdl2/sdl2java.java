/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.libsdl2;

public class sdl2java implements sdl2javaConstants {
  public static SWIGTYPE_p_short new_shortp() {
    long cPtr = sdl2javaJNI.new_shortp();
    return (cPtr == 0) ? null : new SWIGTYPE_p_short(cPtr, false);
  }

  public static SWIGTYPE_p_short copy_shortp(short value) {
    long cPtr = sdl2javaJNI.copy_shortp(value);
    return (cPtr == 0) ? null : new SWIGTYPE_p_short(cPtr, false);
  }

  public static void delete_shortp(SWIGTYPE_p_short obj) {
    sdl2javaJNI.delete_shortp(SWIGTYPE_p_short.getCPtr(obj));
  }

  public static void shortp_assign(SWIGTYPE_p_short obj, short value) {
    sdl2javaJNI.shortp_assign(SWIGTYPE_p_short.getCPtr(obj), value);
  }

  public static short shortp_value(SWIGTYPE_p_short obj) {
    return sdl2javaJNI.shortp_value(SWIGTYPE_p_short.getCPtr(obj));
  }

  public static SWIGTYPE_p_int new_intp() {
    long cPtr = sdl2javaJNI.new_intp();
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  public static SWIGTYPE_p_int copy_intp(int value) {
    long cPtr = sdl2javaJNI.copy_intp(value);
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  public static void delete_intp(SWIGTYPE_p_int obj) {
    sdl2javaJNI.delete_intp(SWIGTYPE_p_int.getCPtr(obj));
  }

  public static void intp_assign(SWIGTYPE_p_int obj, int value) {
    sdl2javaJNI.intp_assign(SWIGTYPE_p_int.getCPtr(obj), value);
  }

  public static int intp_value(SWIGTYPE_p_int obj) {
    return sdl2javaJNI.intp_value(SWIGTYPE_p_int.getCPtr(obj));
  }

  public static SWIGTYPE_p_float new_floatp() {
    long cPtr = sdl2javaJNI.new_floatp();
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public static SWIGTYPE_p_float copy_floatp(float value) {
    long cPtr = sdl2javaJNI.copy_floatp(value);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public static void delete_floatp(SWIGTYPE_p_float obj) {
    sdl2javaJNI.delete_floatp(SWIGTYPE_p_float.getCPtr(obj));
  }

  public static void floatp_assign(SWIGTYPE_p_float obj, float value) {
    sdl2javaJNI.floatp_assign(SWIGTYPE_p_float.getCPtr(obj), value);
  }

  public static float floatp_value(SWIGTYPE_p_float obj) {
    return sdl2javaJNI.floatp_value(SWIGTYPE_p_float.getCPtr(obj));
  }

  public static SWIGTYPE_p_size_t new_size_tp() {
    long cPtr = sdl2javaJNI.new_size_tp();
    return (cPtr == 0) ? null : new SWIGTYPE_p_size_t(cPtr, false);
  }

  public static SWIGTYPE_p_size_t copy_size_tp(long value) {
    long cPtr = sdl2javaJNI.copy_size_tp(value);
    return (cPtr == 0) ? null : new SWIGTYPE_p_size_t(cPtr, false);
  }

  public static void delete_size_tp(SWIGTYPE_p_size_t obj) {
    sdl2javaJNI.delete_size_tp(SWIGTYPE_p_size_t.getCPtr(obj));
  }

  public static void size_tp_assign(SWIGTYPE_p_size_t obj, long value) {
    sdl2javaJNI.size_tp_assign(SWIGTYPE_p_size_t.getCPtr(obj), value);
  }

  public static long size_tp_value(SWIGTYPE_p_size_t obj) {
    return sdl2javaJNI.size_tp_value(SWIGTYPE_p_size_t.getCPtr(obj));
  }

  public static int SDL_Init(long flags) {
    return sdl2javaJNI.SDL_Init(flags);
  }

  public static int SDL_InitSubSystem(long flags) {
    return sdl2javaJNI.SDL_InitSubSystem(flags);
  }

  public static void SDL_QuitSubSystem(long flags) {
    sdl2javaJNI.SDL_QuitSubSystem(flags);
  }

  public static long SDL_WasInit(long flags) {
    return sdl2javaJNI.SDL_WasInit(flags);
  }

  public static void SDL_Quit() {
    sdl2javaJNI.SDL_Quit();
  }

  public static int SDL_main(int argc, SWIGTYPE_p_p_char argv) {
    return sdl2javaJNI.SDL_main(argc, SWIGTYPE_p_p_char.getCPtr(argv));
  }

  public static void SDL_SetMainReady() {
    sdl2javaJNI.SDL_SetMainReady();
  }

  public static SWIGTYPE_p_void SDL_malloc(long size) {
    long cPtr = sdl2javaJNI.SDL_malloc(size);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void SDL_calloc(long nmemb, long size) {
    long cPtr = sdl2javaJNI.SDL_calloc(nmemb, size);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void SDL_realloc(SWIGTYPE_p_void mem, long size) {
    long cPtr = sdl2javaJNI.SDL_realloc(SWIGTYPE_p_void.getCPtr(mem), size);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void SDL_free(SWIGTYPE_p_void mem) {
    sdl2javaJNI.SDL_free(SWIGTYPE_p_void.getCPtr(mem));
  }

  public static String SDL_getenv(String name) {
    return sdl2javaJNI.SDL_getenv(name);
  }

  public static int SDL_setenv(String name, String value, int overwrite) {
    return sdl2javaJNI.SDL_setenv(name, value, overwrite);
  }

  public static void SDL_qsort(SWIGTYPE_p_void base, long nmemb, long size, SWIGTYPE_p_f_p_q_const__void_p_q_const__void__int compare) {
    sdl2javaJNI.SDL_qsort(SWIGTYPE_p_void.getCPtr(base), nmemb, size, SWIGTYPE_p_f_p_q_const__void_p_q_const__void__int.getCPtr(compare));
  }

  public static int SDL_abs(int x) {
    return sdl2javaJNI.SDL_abs(x);
  }

  public static int SDL_isdigit(int x) {
    return sdl2javaJNI.SDL_isdigit(x);
  }

  public static int SDL_isspace(int x) {
    return sdl2javaJNI.SDL_isspace(x);
  }

  public static int SDL_toupper(int x) {
    return sdl2javaJNI.SDL_toupper(x);
  }

  public static int SDL_tolower(int x) {
    return sdl2javaJNI.SDL_tolower(x);
  }

  public static SWIGTYPE_p_void SDL_memset(SWIGTYPE_p_void dst, int c, long len) {
    long cPtr = sdl2javaJNI.SDL_memset(SWIGTYPE_p_void.getCPtr(dst), c, len);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void SDL_memset4(SWIGTYPE_p_void dst, int val, long dwords) {
    sdl2javaJNI.SDL_memset4(SWIGTYPE_p_void.getCPtr(dst), val, dwords);
  }

  public static SWIGTYPE_p_void SDL_memcpy(SWIGTYPE_p_void dst, SWIGTYPE_p_void src, long len) {
    long cPtr = sdl2javaJNI.SDL_memcpy(SWIGTYPE_p_void.getCPtr(dst), SWIGTYPE_p_void.getCPtr(src), len);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void SDL_memcpy4(SWIGTYPE_p_void dst, SWIGTYPE_p_void src, long dwords) {
    long cPtr = sdl2javaJNI.SDL_memcpy4(SWIGTYPE_p_void.getCPtr(dst), SWIGTYPE_p_void.getCPtr(src), dwords);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void SDL_memmove(SWIGTYPE_p_void dst, SWIGTYPE_p_void src, long len) {
    long cPtr = sdl2javaJNI.SDL_memmove(SWIGTYPE_p_void.getCPtr(dst), SWIGTYPE_p_void.getCPtr(src), len);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static int SDL_memcmp(SWIGTYPE_p_void s1, SWIGTYPE_p_void s2, long len) {
    return sdl2javaJNI.SDL_memcmp(SWIGTYPE_p_void.getCPtr(s1), SWIGTYPE_p_void.getCPtr(s2), len);
  }

  public static long SDL_wcslen(SWIGTYPE_p_wchar_t wstr) {
    return sdl2javaJNI.SDL_wcslen(SWIGTYPE_p_wchar_t.getCPtr(wstr));
  }

  public static long SDL_wcslcpy(SWIGTYPE_p_wchar_t dst, SWIGTYPE_p_wchar_t src, long maxlen) {
    return sdl2javaJNI.SDL_wcslcpy(SWIGTYPE_p_wchar_t.getCPtr(dst), SWIGTYPE_p_wchar_t.getCPtr(src), maxlen);
  }

  public static long SDL_wcslcat(SWIGTYPE_p_wchar_t dst, SWIGTYPE_p_wchar_t src, long maxlen) {
    return sdl2javaJNI.SDL_wcslcat(SWIGTYPE_p_wchar_t.getCPtr(dst), SWIGTYPE_p_wchar_t.getCPtr(src), maxlen);
  }

  public static long SDL_strlen(String str) {
    return sdl2javaJNI.SDL_strlen(str);
  }

  public static long SDL_strlcpy(String dst, String src, long maxlen) {
    return sdl2javaJNI.SDL_strlcpy(dst, src, maxlen);
  }

  public static long SDL_utf8strlcpy(String dst, String src, long dst_bytes) {
    return sdl2javaJNI.SDL_utf8strlcpy(dst, src, dst_bytes);
  }

  public static long SDL_strlcat(String dst, String src, long maxlen) {
    return sdl2javaJNI.SDL_strlcat(dst, src, maxlen);
  }

  public static String SDL_strdup(String str) {
    return sdl2javaJNI.SDL_strdup(str);
  }

  public static String SDL_strrev(String str) {
    return sdl2javaJNI.SDL_strrev(str);
  }

  public static String SDL_strupr(String str) {
    return sdl2javaJNI.SDL_strupr(str);
  }

  public static String SDL_strlwr(String str) {
    return sdl2javaJNI.SDL_strlwr(str);
  }

  public static String SDL_strchr(String str, int c) {
    return sdl2javaJNI.SDL_strchr(str, c);
  }

  public static String SDL_strrchr(String str, int c) {
    return sdl2javaJNI.SDL_strrchr(str, c);
  }

  public static String SDL_strstr(String haystack, String needle) {
    return sdl2javaJNI.SDL_strstr(haystack, needle);
  }

  public static String SDL_itoa(int value, String str, int radix) {
    return sdl2javaJNI.SDL_itoa(value, str, radix);
  }

  public static String SDL_uitoa(long value, String str, int radix) {
    return sdl2javaJNI.SDL_uitoa(value, str, radix);
  }

  public static String SDL_ltoa(int value, String str, int radix) {
    return sdl2javaJNI.SDL_ltoa(value, str, radix);
  }

  public static String SDL_ultoa(long value, String str, int radix) {
    return sdl2javaJNI.SDL_ultoa(value, str, radix);
  }

  public static String SDL_lltoa(long value, String str, int radix) {
    return sdl2javaJNI.SDL_lltoa(value, str, radix);
  }

  public static String SDL_ulltoa(java.math.BigInteger value, String str, int radix) {
    return sdl2javaJNI.SDL_ulltoa(value, str, radix);
  }

  public static int SDL_atoi(String str) {
    return sdl2javaJNI.SDL_atoi(str);
  }

  public static double SDL_atof(String str) {
    return sdl2javaJNI.SDL_atof(str);
  }

  public static int SDL_strtol(String str, SWIGTYPE_p_p_char endp, int base) {
    return sdl2javaJNI.SDL_strtol(str, SWIGTYPE_p_p_char.getCPtr(endp), base);
  }

  public static long SDL_strtoul(String str, SWIGTYPE_p_p_char endp, int base) {
    return sdl2javaJNI.SDL_strtoul(str, SWIGTYPE_p_p_char.getCPtr(endp), base);
  }

  public static long SDL_strtoll(String str, SWIGTYPE_p_p_char endp, int base) {
    return sdl2javaJNI.SDL_strtoll(str, SWIGTYPE_p_p_char.getCPtr(endp), base);
  }

  public static java.math.BigInteger SDL_strtoull(String str, SWIGTYPE_p_p_char endp, int base) {
    return sdl2javaJNI.SDL_strtoull(str, SWIGTYPE_p_p_char.getCPtr(endp), base);
  }

  public static double SDL_strtod(String str, SWIGTYPE_p_p_char endp) {
    return sdl2javaJNI.SDL_strtod(str, SWIGTYPE_p_p_char.getCPtr(endp));
  }

  public static int SDL_strcmp(String str1, String str2) {
    return sdl2javaJNI.SDL_strcmp(str1, str2);
  }

  public static int SDL_strncmp(String str1, String str2, long maxlen) {
    return sdl2javaJNI.SDL_strncmp(str1, str2, maxlen);
  }

  public static int SDL_strcasecmp(String str1, String str2) {
    return sdl2javaJNI.SDL_strcasecmp(str1, str2);
  }

  public static int SDL_strncasecmp(String str1, String str2, long len) {
    return sdl2javaJNI.SDL_strncasecmp(str1, str2, len);
  }

  public static int SDL_sscanf(String text, String fmt) {
    return sdl2javaJNI.SDL_sscanf(text, fmt);
  }

  public static int SDL_snprintf(String text, long maxlen, String fmt) {
    return sdl2javaJNI.SDL_snprintf(text, maxlen, fmt);
  }

  public static double SDL_atan(double x) {
    return sdl2javaJNI.SDL_atan(x);
  }

  public static double SDL_atan2(double x, double y) {
    return sdl2javaJNI.SDL_atan2(x, y);
  }

  public static double SDL_ceil(double x) {
    return sdl2javaJNI.SDL_ceil(x);
  }

  public static double SDL_copysign(double x, double y) {
    return sdl2javaJNI.SDL_copysign(x, y);
  }

  public static double SDL_cos(double x) {
    return sdl2javaJNI.SDL_cos(x);
  }

  public static float SDL_cosf(float x) {
    return sdl2javaJNI.SDL_cosf(x);
  }

  public static double SDL_fabs(double x) {
    return sdl2javaJNI.SDL_fabs(x);
  }

  public static double SDL_floor(double x) {
    return sdl2javaJNI.SDL_floor(x);
  }

  public static double SDL_log(double x) {
    return sdl2javaJNI.SDL_log(x);
  }

  public static double SDL_pow(double x, double y) {
    return sdl2javaJNI.SDL_pow(x, y);
  }

  public static double SDL_scalbn(double x, int n) {
    return sdl2javaJNI.SDL_scalbn(x, n);
  }

  public static double SDL_sin(double x) {
    return sdl2javaJNI.SDL_sin(x);
  }

  public static float SDL_sinf(float x) {
    return sdl2javaJNI.SDL_sinf(x);
  }

  public static double SDL_sqrt(double x) {
    return sdl2javaJNI.SDL_sqrt(x);
  }

  public static SWIGTYPE_p__SDL_iconv_t SDL_iconv_open(String tocode, String fromcode) {
    long cPtr = sdl2javaJNI.SDL_iconv_open(tocode, fromcode);
    return (cPtr == 0) ? null : new SWIGTYPE_p__SDL_iconv_t(cPtr, false);
  }

  public static int SDL_iconv_close(SWIGTYPE_p__SDL_iconv_t cd) {
    return sdl2javaJNI.SDL_iconv_close(SWIGTYPE_p__SDL_iconv_t.getCPtr(cd));
  }

  public static long SDL_iconv(SWIGTYPE_p__SDL_iconv_t cd, SWIGTYPE_p_p_char inbuf, SWIGTYPE_p_size_t inbytesleft, SWIGTYPE_p_p_char outbuf, SWIGTYPE_p_size_t outbytesleft) {
    return sdl2javaJNI.SDL_iconv(SWIGTYPE_p__SDL_iconv_t.getCPtr(cd), SWIGTYPE_p_p_char.getCPtr(inbuf), SWIGTYPE_p_size_t.getCPtr(inbytesleft), SWIGTYPE_p_p_char.getCPtr(outbuf), SWIGTYPE_p_size_t.getCPtr(outbytesleft));
  }

  public static String SDL_iconv_string(String tocode, String fromcode, String inbuf, long inbytesleft) {
    return sdl2javaJNI.SDL_iconv_string(tocode, fromcode, inbuf, inbytesleft);
  }

  public static SDL_assert_state SDL_ReportAssertion(SDL_assert_data arg0, String arg1, String arg2, int arg3) {
    return SDL_assert_state.swigToEnum(sdl2javaJNI.SDL_ReportAssertion(SDL_assert_data.getCPtr(arg0), arg0, arg1, arg2, arg3));
  }

  public static void SDL_SetAssertionHandler(SWIGTYPE_p_f_p_q_const__struct_SDL_assert_data_p_void__SDL_assert_state handler, SWIGTYPE_p_void userdata) {
    sdl2javaJNI.SDL_SetAssertionHandler(SWIGTYPE_p_f_p_q_const__struct_SDL_assert_data_p_void__SDL_assert_state.getCPtr(handler), SWIGTYPE_p_void.getCPtr(userdata));
  }

  public static SDL_assert_data SDL_GetAssertionReport() {
    long cPtr = sdl2javaJNI.SDL_GetAssertionReport();
    return (cPtr == 0) ? null : new SDL_assert_data(cPtr, false);
  }

  public static void SDL_ResetAssertionReport() {
    sdl2javaJNI.SDL_ResetAssertionReport();
  }

  public static SDL_bool SDL_AtomicTryLock(SWIGTYPE_p_int lock) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_AtomicTryLock(SWIGTYPE_p_int.getCPtr(lock)));
  }

  public static void SDL_AtomicLock(SWIGTYPE_p_int lock) {
    sdl2javaJNI.SDL_AtomicLock(SWIGTYPE_p_int.getCPtr(lock));
  }

  public static void SDL_AtomicUnlock(SWIGTYPE_p_int lock) {
    sdl2javaJNI.SDL_AtomicUnlock(SWIGTYPE_p_int.getCPtr(lock));
  }

  public static SDL_bool SDL_AtomicCAS(SDL_atomic_t a, int oldval, int newval) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_AtomicCAS(SDL_atomic_t.getCPtr(a), a, oldval, newval));
  }

  public static int SDL_AtomicSet(SDL_atomic_t a, int v) {
    return sdl2javaJNI.SDL_AtomicSet(SDL_atomic_t.getCPtr(a), a, v);
  }

  public static int SDL_AtomicGet(SDL_atomic_t a) {
    return sdl2javaJNI.SDL_AtomicGet(SDL_atomic_t.getCPtr(a), a);
  }

  public static int SDL_AtomicAdd(SDL_atomic_t a, int v) {
    return sdl2javaJNI.SDL_AtomicAdd(SDL_atomic_t.getCPtr(a), a, v);
  }

  public static SDL_bool SDL_AtomicCASPtr(SWIGTYPE_p_p_void a, SWIGTYPE_p_void oldval, SWIGTYPE_p_void newval) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_AtomicCASPtr(SWIGTYPE_p_p_void.getCPtr(a), SWIGTYPE_p_void.getCPtr(oldval), SWIGTYPE_p_void.getCPtr(newval)));
  }

  public static SWIGTYPE_p_void SDL_AtomicSetPtr(SWIGTYPE_p_p_void a, SWIGTYPE_p_void v) {
    long cPtr = sdl2javaJNI.SDL_AtomicSetPtr(SWIGTYPE_p_p_void.getCPtr(a), SWIGTYPE_p_void.getCPtr(v));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void SDL_AtomicGetPtr(SWIGTYPE_p_p_void a) {
    long cPtr = sdl2javaJNI.SDL_AtomicGetPtr(SWIGTYPE_p_p_void.getCPtr(a));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SDL_bool SDL_RectEmpty(SDL_Rect r) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_RectEmpty(SDL_Rect.getCPtr(r), r));
  }

  public static SDL_bool SDL_RectEquals(SDL_Rect a, SDL_Rect b) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_RectEquals(SDL_Rect.getCPtr(a), a, SDL_Rect.getCPtr(b), b));
  }

  public static SDL_bool SDL_HasIntersection(SDL_Rect A, SDL_Rect B) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasIntersection(SDL_Rect.getCPtr(A), A, SDL_Rect.getCPtr(B), B));
  }

  public static SDL_bool SDL_IntersectRect(SDL_Rect A, SDL_Rect B, SDL_Rect result) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_IntersectRect(SDL_Rect.getCPtr(A), A, SDL_Rect.getCPtr(B), B, SDL_Rect.getCPtr(result), result));
  }

  public static void SDL_UnionRect(SDL_Rect A, SDL_Rect B, SDL_Rect result) {
    sdl2javaJNI.SDL_UnionRect(SDL_Rect.getCPtr(A), A, SDL_Rect.getCPtr(B), B, SDL_Rect.getCPtr(result), result);
  }

  public static SDL_bool SDL_EnclosePoints(SDL_Point points, int count, SDL_Rect clip, SDL_Rect result) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_EnclosePoints(SDL_Point.getCPtr(points), points, count, SDL_Rect.getCPtr(clip), clip, SDL_Rect.getCPtr(result), result));
  }

  public static SDL_bool SDL_IntersectRectAndLine(SDL_Rect rect, SWIGTYPE_p_int X1, SWIGTYPE_p_int Y1, SWIGTYPE_p_int X2, SWIGTYPE_p_int Y2) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_IntersectRectAndLine(SDL_Rect.getCPtr(rect), rect, SWIGTYPE_p_int.getCPtr(X1), SWIGTYPE_p_int.getCPtr(Y1), SWIGTYPE_p_int.getCPtr(X2), SWIGTYPE_p_int.getCPtr(Y2)));
  }

  public static int SDL_GetNumAudioDrivers() {
    return sdl2javaJNI.SDL_GetNumAudioDrivers();
  }

  public static String SDL_GetAudioDriver(int index) {
    return sdl2javaJNI.SDL_GetAudioDriver(index);
  }

  public static int SDL_AudioInit(String driver_name) {
    return sdl2javaJNI.SDL_AudioInit(driver_name);
  }

  public static void SDL_AudioQuit() {
    sdl2javaJNI.SDL_AudioQuit();
  }

  public static String SDL_GetCurrentAudioDriver() {
    return sdl2javaJNI.SDL_GetCurrentAudioDriver();
  }

  public static int SDL_OpenAudio(SDL_AudioSpec desired, SDL_AudioSpec obtained) {
    return sdl2javaJNI.SDL_OpenAudio(SDL_AudioSpec.getCPtr(desired), desired, SDL_AudioSpec.getCPtr(obtained), obtained);
  }

  public static int SDL_GetNumAudioDevices(int iscapture) {
    return sdl2javaJNI.SDL_GetNumAudioDevices(iscapture);
  }

  public static String SDL_GetAudioDeviceName(int index, int iscapture) {
    return sdl2javaJNI.SDL_GetAudioDeviceName(index, iscapture);
  }

  public static long SDL_OpenAudioDevice(String device, int iscapture, SDL_AudioSpec desired, SDL_AudioSpec obtained, int allowed_changes) {
    return sdl2javaJNI.SDL_OpenAudioDevice(device, iscapture, SDL_AudioSpec.getCPtr(desired), desired, SDL_AudioSpec.getCPtr(obtained), obtained, allowed_changes);
  }

  public static SDL_AudioStatus SDL_GetAudioStatus() {
    return SDL_AudioStatus.swigToEnum(sdl2javaJNI.SDL_GetAudioStatus());
  }

  public static SDL_AudioStatus SDL_GetAudioDeviceStatus(long dev) {
    return SDL_AudioStatus.swigToEnum(sdl2javaJNI.SDL_GetAudioDeviceStatus(dev));
  }

  public static void SDL_PauseAudio(int pause_on) {
    sdl2javaJNI.SDL_PauseAudio(pause_on);
  }

  public static void SDL_PauseAudioDevice(long dev, int pause_on) {
    sdl2javaJNI.SDL_PauseAudioDevice(dev, pause_on);
  }

  public static SDL_AudioSpec SDL_LoadWAV_RW(SDL_RWops src, int freesrc, SDL_AudioSpec spec, SWIGTYPE_p_p_unsigned_char audio_buf, SWIGTYPE_p_unsigned_int audio_len) {
    long cPtr = sdl2javaJNI.SDL_LoadWAV_RW(SDL_RWops.getCPtr(src), src, freesrc, SDL_AudioSpec.getCPtr(spec), spec, SWIGTYPE_p_p_unsigned_char.getCPtr(audio_buf), SWIGTYPE_p_unsigned_int.getCPtr(audio_len));
    return (cPtr == 0) ? null : new SDL_AudioSpec(cPtr, false);
  }

  public static void SDL_FreeWAV(SWIGTYPE_p_unsigned_char audio_buf) {
    sdl2javaJNI.SDL_FreeWAV(SWIGTYPE_p_unsigned_char.getCPtr(audio_buf));
  }

  public static int SDL_BuildAudioCVT(SDL_AudioCVT cvt, int src_format, short src_channels, int src_rate, int dst_format, short dst_channels, int dst_rate) {
    return sdl2javaJNI.SDL_BuildAudioCVT(SDL_AudioCVT.getCPtr(cvt), cvt, src_format, src_channels, src_rate, dst_format, dst_channels, dst_rate);
  }

  public static int SDL_ConvertAudio(SDL_AudioCVT cvt) {
    return sdl2javaJNI.SDL_ConvertAudio(SDL_AudioCVT.getCPtr(cvt), cvt);
  }

  public static void SDL_MixAudio(SWIGTYPE_p_unsigned_char dst, SWIGTYPE_p_unsigned_char src, long len, int volume) {
    sdl2javaJNI.SDL_MixAudio(SWIGTYPE_p_unsigned_char.getCPtr(dst), SWIGTYPE_p_unsigned_char.getCPtr(src), len, volume);
  }

  public static void SDL_MixAudioFormat(SWIGTYPE_p_unsigned_char dst, SWIGTYPE_p_unsigned_char src, int format, long len, int volume) {
    sdl2javaJNI.SDL_MixAudioFormat(SWIGTYPE_p_unsigned_char.getCPtr(dst), SWIGTYPE_p_unsigned_char.getCPtr(src), format, len, volume);
  }

  public static void SDL_LockAudio() {
    sdl2javaJNI.SDL_LockAudio();
  }

  public static void SDL_LockAudioDevice(long dev) {
    sdl2javaJNI.SDL_LockAudioDevice(dev);
  }

  public static void SDL_UnlockAudio() {
    sdl2javaJNI.SDL_UnlockAudio();
  }

  public static void SDL_UnlockAudioDevice(long dev) {
    sdl2javaJNI.SDL_UnlockAudioDevice(dev);
  }

  public static void SDL_CloseAudio() {
    sdl2javaJNI.SDL_CloseAudio();
  }

  public static void SDL_CloseAudioDevice(long dev) {
    sdl2javaJNI.SDL_CloseAudioDevice(dev);
  }

  public static int SDL_SetClipboardText(String text) {
    return sdl2javaJNI.SDL_SetClipboardText(text);
  }

  public static String SDL_GetClipboardText() {
    return sdl2javaJNI.SDL_GetClipboardText();
  }

  public static SDL_bool SDL_HasClipboardText() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasClipboardText());
  }

  public static int SDL_GetCPUCount() {
    return sdl2javaJNI.SDL_GetCPUCount();
  }

  public static int SDL_GetCPUCacheLineSize() {
    return sdl2javaJNI.SDL_GetCPUCacheLineSize();
  }

  public static SDL_bool SDL_HasRDTSC() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasRDTSC());
  }

  public static SDL_bool SDL_HasAltiVec() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasAltiVec());
  }

  public static SDL_bool SDL_HasMMX() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasMMX());
  }

  public static SDL_bool SDL_Has3DNow() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_Has3DNow());
  }

  public static SDL_bool SDL_HasSSE() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasSSE());
  }

  public static SDL_bool SDL_HasSSE2() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasSSE2());
  }

  public static SDL_bool SDL_HasSSE3() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasSSE3());
  }

  public static SDL_bool SDL_HasSSE41() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasSSE41());
  }

  public static SDL_bool SDL_HasSSE42() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasSSE42());
  }

  public static int SDL_Swap16(int x) {
    return sdl2javaJNI.SDL_Swap16(x);
  }

  public static long SDL_Swap32(long x) {
    return sdl2javaJNI.SDL_Swap32(x);
  }

  public static java.math.BigInteger SDL_Swap64(java.math.BigInteger x) {
    return sdl2javaJNI.SDL_Swap64(x);
  }

  public static float SDL_SwapFloat(float x) {
    return sdl2javaJNI.SDL_SwapFloat(x);
  }

  public static int SDL_SetError(String fmt) {
    return sdl2javaJNI.SDL_SetError(fmt);
  }

  public static String SDL_GetError() {
    return sdl2javaJNI.SDL_GetError();
  }

  public static void SDL_ClearError() {
    sdl2javaJNI.SDL_ClearError();
  }

  public static int SDL_Error(SDL_errorcode code) {
    return sdl2javaJNI.SDL_Error(code.swigValue());
  }

  public static void SDL_PumpEvents() {
    sdl2javaJNI.SDL_PumpEvents();
  }

  public static int SDL_PeepEvents(SDL_Event events, int numevents, SDL_eventaction action, long minType, long maxType) {
    return sdl2javaJNI.SDL_PeepEvents(SDL_Event.getCPtr(events), events, numevents, action.swigValue(), minType, maxType);
  }

  public static SDL_bool SDL_HasEvent(long type) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasEvent(type));
  }

  public static SDL_bool SDL_HasEvents(long minType, long maxType) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasEvents(minType, maxType));
  }

  public static void SDL_FlushEvent(long type) {
    sdl2javaJNI.SDL_FlushEvent(type);
  }

  public static void SDL_FlushEvents(long minType, long maxType) {
    sdl2javaJNI.SDL_FlushEvents(minType, maxType);
  }

  public static int SDL_PollEvent(SDL_Event event) {
    return sdl2javaJNI.SDL_PollEvent(SDL_Event.getCPtr(event), event);
  }

  public static int SDL_WaitEvent(SDL_Event event) {
    return sdl2javaJNI.SDL_WaitEvent(SDL_Event.getCPtr(event), event);
  }

  public static int SDL_WaitEventTimeout(SDL_Event event, int timeout) {
    return sdl2javaJNI.SDL_WaitEventTimeout(SDL_Event.getCPtr(event), event, timeout);
  }

  public static int SDL_PushEvent(SDL_Event event) {
    return sdl2javaJNI.SDL_PushEvent(SDL_Event.getCPtr(event), event);
  }

  public static void SDL_SetEventFilter(SWIGTYPE_p_f_p_void_p_union_SDL_Event__int filter, SWIGTYPE_p_void userdata) {
    sdl2javaJNI.SDL_SetEventFilter(SWIGTYPE_p_f_p_void_p_union_SDL_Event__int.getCPtr(filter), SWIGTYPE_p_void.getCPtr(userdata));
  }

  public static SDL_bool SDL_GetEventFilter(SWIGTYPE_p_p_f_p_void_p_union_SDL_Event__int filter, SWIGTYPE_p_p_void userdata) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_GetEventFilter(SWIGTYPE_p_p_f_p_void_p_union_SDL_Event__int.getCPtr(filter), SWIGTYPE_p_p_void.getCPtr(userdata)));
  }

  public static void SDL_AddEventWatch(SWIGTYPE_p_f_p_void_p_union_SDL_Event__int filter, SWIGTYPE_p_void userdata) {
    sdl2javaJNI.SDL_AddEventWatch(SWIGTYPE_p_f_p_void_p_union_SDL_Event__int.getCPtr(filter), SWIGTYPE_p_void.getCPtr(userdata));
  }

  public static void SDL_DelEventWatch(SWIGTYPE_p_f_p_void_p_union_SDL_Event__int filter, SWIGTYPE_p_void userdata) {
    sdl2javaJNI.SDL_DelEventWatch(SWIGTYPE_p_f_p_void_p_union_SDL_Event__int.getCPtr(filter), SWIGTYPE_p_void.getCPtr(userdata));
  }

  public static void SDL_FilterEvents(SWIGTYPE_p_f_p_void_p_union_SDL_Event__int filter, SWIGTYPE_p_void userdata) {
    sdl2javaJNI.SDL_FilterEvents(SWIGTYPE_p_f_p_void_p_union_SDL_Event__int.getCPtr(filter), SWIGTYPE_p_void.getCPtr(userdata));
  }

  public static short SDL_EventState(long type, int state) {
    return sdl2javaJNI.SDL_EventState(type, state);
  }

  public static long SDL_RegisterEvents(int numevents) {
    return sdl2javaJNI.SDL_RegisterEvents(numevents);
  }

  public static int SDL_NumJoysticks() {
    return sdl2javaJNI.SDL_NumJoysticks();
  }

  public static String SDL_JoystickNameForIndex(int device_index) {
    return sdl2javaJNI.SDL_JoystickNameForIndex(device_index);
  }

  public static SWIGTYPE_p__SDL_Joystick SDL_JoystickOpen(int device_index) {
    long cPtr = sdl2javaJNI.SDL_JoystickOpen(device_index);
    return (cPtr == 0) ? null : new SWIGTYPE_p__SDL_Joystick(cPtr, false);
  }

  public static String SDL_JoystickName(SWIGTYPE_p__SDL_Joystick joystick) {
    return sdl2javaJNI.SDL_JoystickName(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick));
  }

  public static SDL_JoystickGUID SDL_JoystickGetDeviceGUID(int device_index) {
    return new SDL_JoystickGUID(sdl2javaJNI.SDL_JoystickGetDeviceGUID(device_index), true);
  }

  public static SDL_JoystickGUID SDL_JoystickGetGUID(SWIGTYPE_p__SDL_Joystick joystick) {
    return new SDL_JoystickGUID(sdl2javaJNI.SDL_JoystickGetGUID(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick)), true);
  }

  public static void SDL_JoystickGetGUIDString(SDL_JoystickGUID guid, String pszGUID, int cbGUID) {
    sdl2javaJNI.SDL_JoystickGetGUIDString(SDL_JoystickGUID.getCPtr(guid), guid, pszGUID, cbGUID);
  }

  public static SDL_JoystickGUID SDL_JoystickGetGUIDFromString(String pchGUID) {
    return new SDL_JoystickGUID(sdl2javaJNI.SDL_JoystickGetGUIDFromString(pchGUID), true);
  }

  public static SDL_bool SDL_JoystickGetAttached(SWIGTYPE_p__SDL_Joystick joystick) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_JoystickGetAttached(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick)));
  }

  public static int SDL_JoystickInstanceID(SWIGTYPE_p__SDL_Joystick joystick) {
    return sdl2javaJNI.SDL_JoystickInstanceID(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick));
  }

  public static int SDL_JoystickNumAxes(SWIGTYPE_p__SDL_Joystick joystick) {
    return sdl2javaJNI.SDL_JoystickNumAxes(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick));
  }

  public static int SDL_JoystickNumBalls(SWIGTYPE_p__SDL_Joystick joystick) {
    return sdl2javaJNI.SDL_JoystickNumBalls(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick));
  }

  public static int SDL_JoystickNumHats(SWIGTYPE_p__SDL_Joystick joystick) {
    return sdl2javaJNI.SDL_JoystickNumHats(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick));
  }

  public static int SDL_JoystickNumButtons(SWIGTYPE_p__SDL_Joystick joystick) {
    return sdl2javaJNI.SDL_JoystickNumButtons(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick));
  }

  public static void SDL_JoystickUpdate() {
    sdl2javaJNI.SDL_JoystickUpdate();
  }

  public static int SDL_JoystickEventState(int state) {
    return sdl2javaJNI.SDL_JoystickEventState(state);
  }

  public static short SDL_JoystickGetAxis(SWIGTYPE_p__SDL_Joystick joystick, int axis) {
    return sdl2javaJNI.SDL_JoystickGetAxis(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick), axis);
  }

  public static short SDL_JoystickGetHat(SWIGTYPE_p__SDL_Joystick joystick, int hat) {
    return sdl2javaJNI.SDL_JoystickGetHat(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick), hat);
  }

  public static int SDL_JoystickGetBall(SWIGTYPE_p__SDL_Joystick joystick, int ball, SWIGTYPE_p_int dx, SWIGTYPE_p_int dy) {
    return sdl2javaJNI.SDL_JoystickGetBall(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick), ball, SWIGTYPE_p_int.getCPtr(dx), SWIGTYPE_p_int.getCPtr(dy));
  }

  public static short SDL_JoystickGetButton(SWIGTYPE_p__SDL_Joystick joystick, int button) {
    return sdl2javaJNI.SDL_JoystickGetButton(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick), button);
  }

  public static void SDL_JoystickClose(SWIGTYPE_p__SDL_Joystick joystick) {
    sdl2javaJNI.SDL_JoystickClose(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick));
  }

  public static int SDL_GameControllerAddMapping(String mappingString) {
    return sdl2javaJNI.SDL_GameControllerAddMapping(mappingString);
  }

  public static String SDL_GameControllerMappingForGUID(SDL_JoystickGUID guid) {
    return sdl2javaJNI.SDL_GameControllerMappingForGUID(SDL_JoystickGUID.getCPtr(guid), guid);
  }

  public static String SDL_GameControllerMapping(SWIGTYPE_p__SDL_GameController gamecontroller) {
    return sdl2javaJNI.SDL_GameControllerMapping(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller));
  }

  public static SDL_bool SDL_IsGameController(int joystick_index) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_IsGameController(joystick_index));
  }

  public static String SDL_GameControllerNameForIndex(int joystick_index) {
    return sdl2javaJNI.SDL_GameControllerNameForIndex(joystick_index);
  }

  public static SWIGTYPE_p__SDL_GameController SDL_GameControllerOpen(int joystick_index) {
    long cPtr = sdl2javaJNI.SDL_GameControllerOpen(joystick_index);
    return (cPtr == 0) ? null : new SWIGTYPE_p__SDL_GameController(cPtr, false);
  }

  public static String SDL_GameControllerName(SWIGTYPE_p__SDL_GameController gamecontroller) {
    return sdl2javaJNI.SDL_GameControllerName(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller));
  }

  public static SDL_bool SDL_GameControllerGetAttached(SWIGTYPE_p__SDL_GameController gamecontroller) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_GameControllerGetAttached(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller)));
  }

  public static SWIGTYPE_p__SDL_Joystick SDL_GameControllerGetJoystick(SWIGTYPE_p__SDL_GameController gamecontroller) {
    long cPtr = sdl2javaJNI.SDL_GameControllerGetJoystick(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller));
    return (cPtr == 0) ? null : new SWIGTYPE_p__SDL_Joystick(cPtr, false);
  }

  public static int SDL_GameControllerEventState(int state) {
    return sdl2javaJNI.SDL_GameControllerEventState(state);
  }

  public static void SDL_GameControllerUpdate() {
    sdl2javaJNI.SDL_GameControllerUpdate();
  }

  public static SDL_GameControllerAxis SDL_GameControllerGetAxisFromString(String pchString) {
    return SDL_GameControllerAxis.swigToEnum(sdl2javaJNI.SDL_GameControllerGetAxisFromString(pchString));
  }

  public static String SDL_GameControllerGetStringForAxis(SDL_GameControllerAxis axis) {
    return sdl2javaJNI.SDL_GameControllerGetStringForAxis(axis.swigValue());
  }

  public static SDL_GameControllerButtonBind SDL_GameControllerGetBindForAxis(SWIGTYPE_p__SDL_GameController gamecontroller, SDL_GameControllerAxis axis) {
    return new SDL_GameControllerButtonBind(sdl2javaJNI.SDL_GameControllerGetBindForAxis(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller), axis.swigValue()), true);
  }

  public static short SDL_GameControllerGetAxis(SWIGTYPE_p__SDL_GameController gamecontroller, SDL_GameControllerAxis axis) {
    return sdl2javaJNI.SDL_GameControllerGetAxis(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller), axis.swigValue());
  }

  public static SDL_GameControllerButton SDL_GameControllerGetButtonFromString(String pchString) {
    return SDL_GameControllerButton.swigToEnum(sdl2javaJNI.SDL_GameControllerGetButtonFromString(pchString));
  }

  public static String SDL_GameControllerGetStringForButton(SDL_GameControllerButton button) {
    return sdl2javaJNI.SDL_GameControllerGetStringForButton(button.swigValue());
  }

  public static SDL_GameControllerButtonBind SDL_GameControllerGetBindForButton(SWIGTYPE_p__SDL_GameController gamecontroller, SDL_GameControllerButton button) {
    return new SDL_GameControllerButtonBind(sdl2javaJNI.SDL_GameControllerGetBindForButton(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller), button.swigValue()), true);
  }

  public static short SDL_GameControllerGetButton(SWIGTYPE_p__SDL_GameController gamecontroller, SDL_GameControllerButton button) {
    return sdl2javaJNI.SDL_GameControllerGetButton(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller), button.swigValue());
  }

  public static void SDL_GameControllerClose(SWIGTYPE_p__SDL_GameController gamecontroller) {
    sdl2javaJNI.SDL_GameControllerClose(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller));
  }

  public static int SDL_NumHaptics() {
    return sdl2javaJNI.SDL_NumHaptics();
  }

  public static String SDL_HapticName(int device_index) {
    return sdl2javaJNI.SDL_HapticName(device_index);
  }

  public static SWIGTYPE_p__SDL_Haptic SDL_HapticOpen(int device_index) {
    long cPtr = sdl2javaJNI.SDL_HapticOpen(device_index);
    return (cPtr == 0) ? null : new SWIGTYPE_p__SDL_Haptic(cPtr, false);
  }

  public static int SDL_HapticOpened(int device_index) {
    return sdl2javaJNI.SDL_HapticOpened(device_index);
  }

  public static int SDL_HapticIndex(SWIGTYPE_p__SDL_Haptic haptic) {
    return sdl2javaJNI.SDL_HapticIndex(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic));
  }

  public static int SDL_MouseIsHaptic() {
    return sdl2javaJNI.SDL_MouseIsHaptic();
  }

  public static SWIGTYPE_p__SDL_Haptic SDL_HapticOpenFromMouse() {
    long cPtr = sdl2javaJNI.SDL_HapticOpenFromMouse();
    return (cPtr == 0) ? null : new SWIGTYPE_p__SDL_Haptic(cPtr, false);
  }

  public static int SDL_JoystickIsHaptic(SWIGTYPE_p__SDL_Joystick joystick) {
    return sdl2javaJNI.SDL_JoystickIsHaptic(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick));
  }

  public static SWIGTYPE_p__SDL_Haptic SDL_HapticOpenFromJoystick(SWIGTYPE_p__SDL_Joystick joystick) {
    long cPtr = sdl2javaJNI.SDL_HapticOpenFromJoystick(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick));
    return (cPtr == 0) ? null : new SWIGTYPE_p__SDL_Haptic(cPtr, false);
  }

  public static void SDL_HapticClose(SWIGTYPE_p__SDL_Haptic haptic) {
    sdl2javaJNI.SDL_HapticClose(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic));
  }

  public static int SDL_HapticNumEffects(SWIGTYPE_p__SDL_Haptic haptic) {
    return sdl2javaJNI.SDL_HapticNumEffects(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic));
  }

  public static int SDL_HapticNumEffectsPlaying(SWIGTYPE_p__SDL_Haptic haptic) {
    return sdl2javaJNI.SDL_HapticNumEffectsPlaying(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic));
  }

  public static long SDL_HapticQuery(SWIGTYPE_p__SDL_Haptic haptic) {
    return sdl2javaJNI.SDL_HapticQuery(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic));
  }

  public static int SDL_HapticNumAxes(SWIGTYPE_p__SDL_Haptic haptic) {
    return sdl2javaJNI.SDL_HapticNumAxes(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic));
  }

  public static int SDL_HapticEffectSupported(SWIGTYPE_p__SDL_Haptic haptic, SDL_HapticEffect effect) {
    return sdl2javaJNI.SDL_HapticEffectSupported(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic), SDL_HapticEffect.getCPtr(effect), effect);
  }

  public static int SDL_HapticNewEffect(SWIGTYPE_p__SDL_Haptic haptic, SDL_HapticEffect effect) {
    return sdl2javaJNI.SDL_HapticNewEffect(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic), SDL_HapticEffect.getCPtr(effect), effect);
  }

  public static int SDL_HapticUpdateEffect(SWIGTYPE_p__SDL_Haptic haptic, int effect, SDL_HapticEffect data) {
    return sdl2javaJNI.SDL_HapticUpdateEffect(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic), effect, SDL_HapticEffect.getCPtr(data), data);
  }

  public static int SDL_HapticRunEffect(SWIGTYPE_p__SDL_Haptic haptic, int effect, long iterations) {
    return sdl2javaJNI.SDL_HapticRunEffect(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic), effect, iterations);
  }

  public static int SDL_HapticStopEffect(SWIGTYPE_p__SDL_Haptic haptic, int effect) {
    return sdl2javaJNI.SDL_HapticStopEffect(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic), effect);
  }

  public static void SDL_HapticDestroyEffect(SWIGTYPE_p__SDL_Haptic haptic, int effect) {
    sdl2javaJNI.SDL_HapticDestroyEffect(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic), effect);
  }

  public static int SDL_HapticGetEffectStatus(SWIGTYPE_p__SDL_Haptic haptic, int effect) {
    return sdl2javaJNI.SDL_HapticGetEffectStatus(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic), effect);
  }

  public static int SDL_HapticSetGain(SWIGTYPE_p__SDL_Haptic haptic, int gain) {
    return sdl2javaJNI.SDL_HapticSetGain(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic), gain);
  }

  public static int SDL_HapticSetAutocenter(SWIGTYPE_p__SDL_Haptic haptic, int autocenter) {
    return sdl2javaJNI.SDL_HapticSetAutocenter(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic), autocenter);
  }

  public static int SDL_HapticPause(SWIGTYPE_p__SDL_Haptic haptic) {
    return sdl2javaJNI.SDL_HapticPause(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic));
  }

  public static int SDL_HapticUnpause(SWIGTYPE_p__SDL_Haptic haptic) {
    return sdl2javaJNI.SDL_HapticUnpause(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic));
  }

  public static int SDL_HapticStopAll(SWIGTYPE_p__SDL_Haptic haptic) {
    return sdl2javaJNI.SDL_HapticStopAll(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic));
  }

  public static int SDL_HapticRumbleSupported(SWIGTYPE_p__SDL_Haptic haptic) {
    return sdl2javaJNI.SDL_HapticRumbleSupported(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic));
  }

  public static int SDL_HapticRumbleInit(SWIGTYPE_p__SDL_Haptic haptic) {
    return sdl2javaJNI.SDL_HapticRumbleInit(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic));
  }

  public static int SDL_HapticRumblePlay(SWIGTYPE_p__SDL_Haptic haptic, float strength, long length) {
    return sdl2javaJNI.SDL_HapticRumblePlay(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic), strength, length);
  }

  public static int SDL_HapticRumbleStop(SWIGTYPE_p__SDL_Haptic haptic) {
    return sdl2javaJNI.SDL_HapticRumbleStop(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic));
  }

  public static SDL_bool SDL_SetHintWithPriority(String name, String value, SDL_HintPriority priority) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_SetHintWithPriority(name, value, priority.swigValue()));
  }

  public static SDL_bool SDL_SetHint(String name, String value) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_SetHint(name, value));
  }

  public static String SDL_GetHint(String name) {
    return sdl2javaJNI.SDL_GetHint(name);
  }

  public static void SDL_AddHintCallback(String name, SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_q_const__char__void callback, SWIGTYPE_p_void userdata) {
    sdl2javaJNI.SDL_AddHintCallback(name, SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_q_const__char__void.getCPtr(callback), SWIGTYPE_p_void.getCPtr(userdata));
  }

  public static void SDL_DelHintCallback(String name, SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_q_const__char__void callback, SWIGTYPE_p_void userdata) {
    sdl2javaJNI.SDL_DelHintCallback(name, SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_q_const__char__void.getCPtr(callback), SWIGTYPE_p_void.getCPtr(userdata));
  }

  public static void SDL_ClearHints() {
    sdl2javaJNI.SDL_ClearHints();
  }

  public static SWIGTYPE_p_void SDL_LoadObject(String sofile) {
    long cPtr = sdl2javaJNI.SDL_LoadObject(sofile);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void SDL_LoadFunction(SWIGTYPE_p_void handle, String name) {
    long cPtr = sdl2javaJNI.SDL_LoadFunction(SWIGTYPE_p_void.getCPtr(handle), name);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void SDL_UnloadObject(SWIGTYPE_p_void handle) {
    sdl2javaJNI.SDL_UnloadObject(SWIGTYPE_p_void.getCPtr(handle));
  }

  public static void SDL_LogSetAllPriority(SDL_LogPriority priority) {
    sdl2javaJNI.SDL_LogSetAllPriority(priority.swigValue());
  }

  public static void SDL_LogSetPriority(int category, SDL_LogPriority priority) {
    sdl2javaJNI.SDL_LogSetPriority(category, priority.swigValue());
  }

  public static SDL_LogPriority SDL_LogGetPriority(int category) {
    return SDL_LogPriority.swigToEnum(sdl2javaJNI.SDL_LogGetPriority(category));
  }

  public static void SDL_LogResetPriorities() {
    sdl2javaJNI.SDL_LogResetPriorities();
  }

  public static void SDL_Log(String fmt) {
    sdl2javaJNI.SDL_Log(fmt);
  }

  public static void SDL_LogVerbose(int category, String fmt) {
    sdl2javaJNI.SDL_LogVerbose(category, fmt);
  }

  public static void SDL_LogDebug(int category, String fmt) {
    sdl2javaJNI.SDL_LogDebug(category, fmt);
  }

  public static void SDL_LogInfo(int category, String fmt) {
    sdl2javaJNI.SDL_LogInfo(category, fmt);
  }

  public static void SDL_LogWarn(int category, String fmt) {
    sdl2javaJNI.SDL_LogWarn(category, fmt);
  }

  public static void SDL_LogError(int category, String fmt) {
    sdl2javaJNI.SDL_LogError(category, fmt);
  }

  public static void SDL_LogCritical(int category, String fmt) {
    sdl2javaJNI.SDL_LogCritical(category, fmt);
  }

  public static void SDL_LogMessage(int category, SDL_LogPriority priority, String fmt) {
    sdl2javaJNI.SDL_LogMessage(category, priority.swigValue(), fmt);
  }

  public static void SDL_LogGetOutputFunction(SWIGTYPE_p_p_f_p_void_int_enum_SDL_LogPriority_p_q_const__char__void callback, SWIGTYPE_p_p_void userdata) {
    sdl2javaJNI.SDL_LogGetOutputFunction(SWIGTYPE_p_p_f_p_void_int_enum_SDL_LogPriority_p_q_const__char__void.getCPtr(callback), SWIGTYPE_p_p_void.getCPtr(userdata));
  }

  public static void SDL_LogSetOutputFunction(SWIGTYPE_p_f_p_void_int_enum_SDL_LogPriority_p_q_const__char__void callback, SWIGTYPE_p_void userdata) {
    sdl2javaJNI.SDL_LogSetOutputFunction(SWIGTYPE_p_f_p_void_int_enum_SDL_LogPriority_p_q_const__char__void.getCPtr(callback), SWIGTYPE_p_void.getCPtr(userdata));
  }

  public static int SDL_ShowMessageBox(SDL_MessageBoxData messageboxdata, SWIGTYPE_p_int buttonid) {
    return sdl2javaJNI.SDL_ShowMessageBox(SDL_MessageBoxData.getCPtr(messageboxdata), messageboxdata, SWIGTYPE_p_int.getCPtr(buttonid));
  }

  public static int SDL_ShowSimpleMessageBox(long flags, String title, String message, SWIGTYPE_p_SDL_Window window) {
    return sdl2javaJNI.SDL_ShowSimpleMessageBox(flags, title, message, SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static SWIGTYPE_p_SDL_mutex SDL_CreateMutex() {
    long cPtr = sdl2javaJNI.SDL_CreateMutex();
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_mutex(cPtr, false);
  }

  public static int SDL_LockMutex(SWIGTYPE_p_SDL_mutex mutex) {
    return sdl2javaJNI.SDL_LockMutex(SWIGTYPE_p_SDL_mutex.getCPtr(mutex));
  }

  public static int SDL_TryLockMutex(SWIGTYPE_p_SDL_mutex mutex) {
    return sdl2javaJNI.SDL_TryLockMutex(SWIGTYPE_p_SDL_mutex.getCPtr(mutex));
  }

  public static int SDL_UnlockMutex(SWIGTYPE_p_SDL_mutex mutex) {
    return sdl2javaJNI.SDL_UnlockMutex(SWIGTYPE_p_SDL_mutex.getCPtr(mutex));
  }

  public static void SDL_DestroyMutex(SWIGTYPE_p_SDL_mutex mutex) {
    sdl2javaJNI.SDL_DestroyMutex(SWIGTYPE_p_SDL_mutex.getCPtr(mutex));
  }

  public static SWIGTYPE_p_SDL_semaphore SDL_CreateSemaphore(long initial_value) {
    long cPtr = sdl2javaJNI.SDL_CreateSemaphore(initial_value);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_semaphore(cPtr, false);
  }

  public static void SDL_DestroySemaphore(SWIGTYPE_p_SDL_semaphore sem) {
    sdl2javaJNI.SDL_DestroySemaphore(SWIGTYPE_p_SDL_semaphore.getCPtr(sem));
  }

  public static int SDL_SemWait(SWIGTYPE_p_SDL_semaphore sem) {
    return sdl2javaJNI.SDL_SemWait(SWIGTYPE_p_SDL_semaphore.getCPtr(sem));
  }

  public static int SDL_SemTryWait(SWIGTYPE_p_SDL_semaphore sem) {
    return sdl2javaJNI.SDL_SemTryWait(SWIGTYPE_p_SDL_semaphore.getCPtr(sem));
  }

  public static int SDL_SemWaitTimeout(SWIGTYPE_p_SDL_semaphore sem, long ms) {
    return sdl2javaJNI.SDL_SemWaitTimeout(SWIGTYPE_p_SDL_semaphore.getCPtr(sem), ms);
  }

  public static int SDL_SemPost(SWIGTYPE_p_SDL_semaphore sem) {
    return sdl2javaJNI.SDL_SemPost(SWIGTYPE_p_SDL_semaphore.getCPtr(sem));
  }

  public static long SDL_SemValue(SWIGTYPE_p_SDL_semaphore sem) {
    return sdl2javaJNI.SDL_SemValue(SWIGTYPE_p_SDL_semaphore.getCPtr(sem));
  }

  public static SWIGTYPE_p_SDL_cond SDL_CreateCond() {
    long cPtr = sdl2javaJNI.SDL_CreateCond();
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_cond(cPtr, false);
  }

  public static void SDL_DestroyCond(SWIGTYPE_p_SDL_cond cond) {
    sdl2javaJNI.SDL_DestroyCond(SWIGTYPE_p_SDL_cond.getCPtr(cond));
  }

  public static int SDL_CondSignal(SWIGTYPE_p_SDL_cond cond) {
    return sdl2javaJNI.SDL_CondSignal(SWIGTYPE_p_SDL_cond.getCPtr(cond));
  }

  public static int SDL_CondBroadcast(SWIGTYPE_p_SDL_cond cond) {
    return sdl2javaJNI.SDL_CondBroadcast(SWIGTYPE_p_SDL_cond.getCPtr(cond));
  }

  public static int SDL_CondWait(SWIGTYPE_p_SDL_cond cond, SWIGTYPE_p_SDL_mutex mutex) {
    return sdl2javaJNI.SDL_CondWait(SWIGTYPE_p_SDL_cond.getCPtr(cond), SWIGTYPE_p_SDL_mutex.getCPtr(mutex));
  }

  public static int SDL_CondWaitTimeout(SWIGTYPE_p_SDL_cond cond, SWIGTYPE_p_SDL_mutex mutex, long ms) {
    return sdl2javaJNI.SDL_CondWaitTimeout(SWIGTYPE_p_SDL_cond.getCPtr(cond), SWIGTYPE_p_SDL_mutex.getCPtr(mutex), ms);
  }

  public static SDL_PowerState SDL_GetPowerInfo(SWIGTYPE_p_int secs, SWIGTYPE_p_int pct) {
    return SDL_PowerState.swigToEnum(sdl2javaJNI.SDL_GetPowerInfo(SWIGTYPE_p_int.getCPtr(secs), SWIGTYPE_p_int.getCPtr(pct)));
  }

  public static int SDL_GetNumRenderDrivers() {
    return sdl2javaJNI.SDL_GetNumRenderDrivers();
  }

  public static int SDL_GetRenderDriverInfo(int index, SDL_RendererInfo info) {
    return sdl2javaJNI.SDL_GetRenderDriverInfo(index, SDL_RendererInfo.getCPtr(info), info);
  }

  public static int SDL_CreateWindowAndRenderer(int width, int height, long window_flags, SWIGTYPE_p_p_SDL_Window window, SWIGTYPE_p_p_SDL_Renderer renderer) {
    return sdl2javaJNI.SDL_CreateWindowAndRenderer(width, height, window_flags, SWIGTYPE_p_p_SDL_Window.getCPtr(window), SWIGTYPE_p_p_SDL_Renderer.getCPtr(renderer));
  }

  public static SWIGTYPE_p_SDL_Renderer SDL_CreateRenderer(SWIGTYPE_p_SDL_Window window, int index, long flags) {
    long cPtr = sdl2javaJNI.SDL_CreateRenderer(SWIGTYPE_p_SDL_Window.getCPtr(window), index, flags);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Renderer(cPtr, false);
  }

  public static SWIGTYPE_p_SDL_Renderer SDL_CreateSoftwareRenderer(SDL_Surface surface) {
    long cPtr = sdl2javaJNI.SDL_CreateSoftwareRenderer(SDL_Surface.getCPtr(surface), surface);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Renderer(cPtr, false);
  }

  public static SWIGTYPE_p_SDL_Renderer SDL_GetRenderer(SWIGTYPE_p_SDL_Window window) {
    long cPtr = sdl2javaJNI.SDL_GetRenderer(SWIGTYPE_p_SDL_Window.getCPtr(window));
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Renderer(cPtr, false);
  }

  public static int SDL_GetRendererInfo(SWIGTYPE_p_SDL_Renderer renderer, SDL_RendererInfo info) {
    return sdl2javaJNI.SDL_GetRendererInfo(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_RendererInfo.getCPtr(info), info);
  }

  public static int SDL_GetRendererOutputSize(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_int w, SWIGTYPE_p_int h) {
    return sdl2javaJNI.SDL_GetRendererOutputSize(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_int.getCPtr(w), SWIGTYPE_p_int.getCPtr(h));
  }

  public static SWIGTYPE_p_SDL_Texture SDL_CreateTexture(SWIGTYPE_p_SDL_Renderer renderer, long format, int access, int w, int h) {
    long cPtr = sdl2javaJNI.SDL_CreateTexture(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), format, access, w, h);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Texture(cPtr, false);
  }

  public static SWIGTYPE_p_SDL_Texture SDL_CreateTextureFromSurface(SWIGTYPE_p_SDL_Renderer renderer, SDL_Surface surface) {
    long cPtr = sdl2javaJNI.SDL_CreateTextureFromSurface(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_Surface.getCPtr(surface), surface);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Texture(cPtr, false);
  }

  public static int SDL_QueryTexture(SWIGTYPE_p_SDL_Texture texture, SWIGTYPE_p_unsigned_int format, SWIGTYPE_p_int access, SWIGTYPE_p_int w, SWIGTYPE_p_int h) {
    return sdl2javaJNI.SDL_QueryTexture(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SWIGTYPE_p_unsigned_int.getCPtr(format), SWIGTYPE_p_int.getCPtr(access), SWIGTYPE_p_int.getCPtr(w), SWIGTYPE_p_int.getCPtr(h));
  }

  public static int SDL_SetTextureColorMod(SWIGTYPE_p_SDL_Texture texture, short r, short g, short b) {
    return sdl2javaJNI.SDL_SetTextureColorMod(SWIGTYPE_p_SDL_Texture.getCPtr(texture), r, g, b);
  }

  public static int SDL_GetTextureColorMod(SWIGTYPE_p_SDL_Texture texture, SWIGTYPE_p_unsigned_char r, SWIGTYPE_p_unsigned_char g, SWIGTYPE_p_unsigned_char b) {
    return sdl2javaJNI.SDL_GetTextureColorMod(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SWIGTYPE_p_unsigned_char.getCPtr(r), SWIGTYPE_p_unsigned_char.getCPtr(g), SWIGTYPE_p_unsigned_char.getCPtr(b));
  }

  public static int SDL_SetTextureAlphaMod(SWIGTYPE_p_SDL_Texture texture, short alpha) {
    return sdl2javaJNI.SDL_SetTextureAlphaMod(SWIGTYPE_p_SDL_Texture.getCPtr(texture), alpha);
  }

  public static int SDL_GetTextureAlphaMod(SWIGTYPE_p_SDL_Texture texture, SWIGTYPE_p_unsigned_char alpha) {
    return sdl2javaJNI.SDL_GetTextureAlphaMod(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SWIGTYPE_p_unsigned_char.getCPtr(alpha));
  }

  public static int SDL_SetTextureBlendMode(SWIGTYPE_p_SDL_Texture texture, SWIGTYPE_p_SDL_BlendMode blendMode) {
    return sdl2javaJNI.SDL_SetTextureBlendMode(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SWIGTYPE_p_SDL_BlendMode.getCPtr(blendMode));
  }

  public static int SDL_GetTextureBlendMode(SWIGTYPE_p_SDL_Texture texture, SWIGTYPE_p_SDL_BlendMode blendMode) {
    return sdl2javaJNI.SDL_GetTextureBlendMode(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SWIGTYPE_p_SDL_BlendMode.getCPtr(blendMode));
  }

  public static int SDL_UpdateTexture(SWIGTYPE_p_SDL_Texture texture, SDL_Rect rect, SWIGTYPE_p_void pixels, int pitch) {
    return sdl2javaJNI.SDL_UpdateTexture(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SDL_Rect.getCPtr(rect), rect, SWIGTYPE_p_void.getCPtr(pixels), pitch);
  }

  public static int SDL_LockTexture(SWIGTYPE_p_SDL_Texture texture, SDL_Rect rect, SWIGTYPE_p_p_void pixels, SWIGTYPE_p_int pitch) {
    return sdl2javaJNI.SDL_LockTexture(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SDL_Rect.getCPtr(rect), rect, SWIGTYPE_p_p_void.getCPtr(pixels), SWIGTYPE_p_int.getCPtr(pitch));
  }

  public static void SDL_UnlockTexture(SWIGTYPE_p_SDL_Texture texture) {
    sdl2javaJNI.SDL_UnlockTexture(SWIGTYPE_p_SDL_Texture.getCPtr(texture));
  }

  public static SDL_bool SDL_RenderTargetSupported(SWIGTYPE_p_SDL_Renderer renderer) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_RenderTargetSupported(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer)));
  }

  public static int SDL_SetRenderTarget(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_Texture texture) {
    return sdl2javaJNI.SDL_SetRenderTarget(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_Texture.getCPtr(texture));
  }

  public static SWIGTYPE_p_SDL_Texture SDL_GetRenderTarget(SWIGTYPE_p_SDL_Renderer renderer) {
    long cPtr = sdl2javaJNI.SDL_GetRenderTarget(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer));
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Texture(cPtr, false);
  }

  public static int SDL_RenderSetLogicalSize(SWIGTYPE_p_SDL_Renderer renderer, int w, int h) {
    return sdl2javaJNI.SDL_RenderSetLogicalSize(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), w, h);
  }

  public static void SDL_RenderGetLogicalSize(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_int w, SWIGTYPE_p_int h) {
    sdl2javaJNI.SDL_RenderGetLogicalSize(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_int.getCPtr(w), SWIGTYPE_p_int.getCPtr(h));
  }

  public static int SDL_RenderSetViewport(SWIGTYPE_p_SDL_Renderer renderer, SDL_Rect rect) {
    return sdl2javaJNI.SDL_RenderSetViewport(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_Rect.getCPtr(rect), rect);
  }

  public static void SDL_RenderGetViewport(SWIGTYPE_p_SDL_Renderer renderer, SDL_Rect rect) {
    sdl2javaJNI.SDL_RenderGetViewport(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_Rect.getCPtr(rect), rect);
  }

  public static int SDL_RenderSetClipRect(SWIGTYPE_p_SDL_Renderer renderer, SDL_Rect rect) {
    return sdl2javaJNI.SDL_RenderSetClipRect(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_Rect.getCPtr(rect), rect);
  }

  public static void SDL_RenderGetClipRect(SWIGTYPE_p_SDL_Renderer renderer, SDL_Rect rect) {
    sdl2javaJNI.SDL_RenderGetClipRect(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_Rect.getCPtr(rect), rect);
  }

  public static int SDL_RenderSetScale(SWIGTYPE_p_SDL_Renderer renderer, float scaleX, float scaleY) {
    return sdl2javaJNI.SDL_RenderSetScale(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), scaleX, scaleY);
  }

  public static void SDL_RenderGetScale(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_float scaleX, SWIGTYPE_p_float scaleY) {
    sdl2javaJNI.SDL_RenderGetScale(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_float.getCPtr(scaleX), SWIGTYPE_p_float.getCPtr(scaleY));
  }

  public static int SDL_SetRenderDrawColor(SWIGTYPE_p_SDL_Renderer renderer, short r, short g, short b, short a) {
    return sdl2javaJNI.SDL_SetRenderDrawColor(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), r, g, b, a);
  }

  public static int SDL_GetRenderDrawColor(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_unsigned_char r, SWIGTYPE_p_unsigned_char g, SWIGTYPE_p_unsigned_char b, SWIGTYPE_p_unsigned_char a) {
    return sdl2javaJNI.SDL_GetRenderDrawColor(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_unsigned_char.getCPtr(r), SWIGTYPE_p_unsigned_char.getCPtr(g), SWIGTYPE_p_unsigned_char.getCPtr(b), SWIGTYPE_p_unsigned_char.getCPtr(a));
  }

  public static int SDL_SetRenderDrawBlendMode(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_BlendMode blendMode) {
    return sdl2javaJNI.SDL_SetRenderDrawBlendMode(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_BlendMode.getCPtr(blendMode));
  }

  public static int SDL_GetRenderDrawBlendMode(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_BlendMode blendMode) {
    return sdl2javaJNI.SDL_GetRenderDrawBlendMode(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_BlendMode.getCPtr(blendMode));
  }

  public static int SDL_RenderClear(SWIGTYPE_p_SDL_Renderer renderer) {
    return sdl2javaJNI.SDL_RenderClear(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer));
  }

  public static int SDL_RenderDrawPoint(SWIGTYPE_p_SDL_Renderer renderer, int x, int y) {
    return sdl2javaJNI.SDL_RenderDrawPoint(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), x, y);
  }

  public static int SDL_RenderDrawPoints(SWIGTYPE_p_SDL_Renderer renderer, SDL_Point points, int count) {
    return sdl2javaJNI.SDL_RenderDrawPoints(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_Point.getCPtr(points), points, count);
  }

  public static int SDL_RenderDrawLine(SWIGTYPE_p_SDL_Renderer renderer, int x1, int y1, int x2, int y2) {
    return sdl2javaJNI.SDL_RenderDrawLine(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), x1, y1, x2, y2);
  }

  public static int SDL_RenderDrawLines(SWIGTYPE_p_SDL_Renderer renderer, SDL_Point points, int count) {
    return sdl2javaJNI.SDL_RenderDrawLines(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_Point.getCPtr(points), points, count);
  }

  public static int SDL_RenderDrawRect(SWIGTYPE_p_SDL_Renderer renderer, SDL_Rect rect) {
    return sdl2javaJNI.SDL_RenderDrawRect(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_Rect.getCPtr(rect), rect);
  }

  public static int SDL_RenderDrawRects(SWIGTYPE_p_SDL_Renderer renderer, SDL_Rect rects, int count) {
    return sdl2javaJNI.SDL_RenderDrawRects(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_Rect.getCPtr(rects), rects, count);
  }

  public static int SDL_RenderFillRect(SWIGTYPE_p_SDL_Renderer renderer, SDL_Rect rect) {
    return sdl2javaJNI.SDL_RenderFillRect(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_Rect.getCPtr(rect), rect);
  }

  public static int SDL_RenderFillRects(SWIGTYPE_p_SDL_Renderer renderer, SDL_Rect rects, int count) {
    return sdl2javaJNI.SDL_RenderFillRects(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_Rect.getCPtr(rects), rects, count);
  }

  public static int SDL_RenderCopy(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_Texture texture, SDL_Rect srcrect, SDL_Rect dstrect) {
    return sdl2javaJNI.SDL_RenderCopy(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_Texture.getCPtr(texture), SDL_Rect.getCPtr(srcrect), srcrect, SDL_Rect.getCPtr(dstrect), dstrect);
  }

  public static int SDL_RenderCopyEx(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_Texture texture, SDL_Rect srcrect, SDL_Rect dstrect, double angle, SDL_Point center, SDL_RendererFlip flip) {
    return sdl2javaJNI.SDL_RenderCopyEx(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_Texture.getCPtr(texture), SDL_Rect.getCPtr(srcrect), srcrect, SDL_Rect.getCPtr(dstrect), dstrect, angle, SDL_Point.getCPtr(center), center, flip.swigValue());
  }

  public static int SDL_RenderReadPixels(SWIGTYPE_p_SDL_Renderer renderer, SDL_Rect rect, long format, SWIGTYPE_p_void pixels, int pitch) {
    return sdl2javaJNI.SDL_RenderReadPixels(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_Rect.getCPtr(rect), rect, format, SWIGTYPE_p_void.getCPtr(pixels), pitch);
  }

  public static void SDL_RenderPresent(SWIGTYPE_p_SDL_Renderer renderer) {
    sdl2javaJNI.SDL_RenderPresent(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer));
  }

  public static void SDL_DestroyTexture(SWIGTYPE_p_SDL_Texture texture) {
    sdl2javaJNI.SDL_DestroyTexture(SWIGTYPE_p_SDL_Texture.getCPtr(texture));
  }

  public static void SDL_DestroyRenderer(SWIGTYPE_p_SDL_Renderer renderer) {
    sdl2javaJNI.SDL_DestroyRenderer(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer));
  }

  public static int SDL_GL_BindTexture(SWIGTYPE_p_SDL_Texture texture, SWIGTYPE_p_float texw, SWIGTYPE_p_float texh) {
    return sdl2javaJNI.SDL_GL_BindTexture(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SWIGTYPE_p_float.getCPtr(texw), SWIGTYPE_p_float.getCPtr(texh));
  }

  public static int SDL_GL_UnbindTexture(SWIGTYPE_p_SDL_Texture texture) {
    return sdl2javaJNI.SDL_GL_UnbindTexture(SWIGTYPE_p_SDL_Texture.getCPtr(texture));
  }

  public static SDL_RWops SDL_RWFromFile(String file, String mode) {
    long cPtr = sdl2javaJNI.SDL_RWFromFile(file, mode);
    return (cPtr == 0) ? null : new SDL_RWops(cPtr, false);
  }

  public static SDL_RWops SDL_RWFromFP(SWIGTYPE_p_void fp, SDL_bool autoclose) {
    long cPtr = sdl2javaJNI.SDL_RWFromFP(SWIGTYPE_p_void.getCPtr(fp), autoclose.swigValue());
    return (cPtr == 0) ? null : new SDL_RWops(cPtr, false);
  }

  public static SDL_RWops SDL_RWFromMem(SWIGTYPE_p_void mem, int size) {
    long cPtr = sdl2javaJNI.SDL_RWFromMem(SWIGTYPE_p_void.getCPtr(mem), size);
    return (cPtr == 0) ? null : new SDL_RWops(cPtr, false);
  }

  public static SDL_RWops SDL_RWFromConstMem(SWIGTYPE_p_void mem, int size) {
    long cPtr = sdl2javaJNI.SDL_RWFromConstMem(SWIGTYPE_p_void.getCPtr(mem), size);
    return (cPtr == 0) ? null : new SDL_RWops(cPtr, false);
  }

  public static SDL_RWops SDL_AllocRW() {
    long cPtr = sdl2javaJNI.SDL_AllocRW();
    return (cPtr == 0) ? null : new SDL_RWops(cPtr, false);
  }

  public static void SDL_FreeRW(SDL_RWops area) {
    sdl2javaJNI.SDL_FreeRW(SDL_RWops.getCPtr(area), area);
  }

  public static short SDL_ReadU8(SDL_RWops src) {
    return sdl2javaJNI.SDL_ReadU8(SDL_RWops.getCPtr(src), src);
  }

  public static int SDL_ReadLE16(SDL_RWops src) {
    return sdl2javaJNI.SDL_ReadLE16(SDL_RWops.getCPtr(src), src);
  }

  public static int SDL_ReadBE16(SDL_RWops src) {
    return sdl2javaJNI.SDL_ReadBE16(SDL_RWops.getCPtr(src), src);
  }

  public static long SDL_ReadLE32(SDL_RWops src) {
    return sdl2javaJNI.SDL_ReadLE32(SDL_RWops.getCPtr(src), src);
  }

  public static long SDL_ReadBE32(SDL_RWops src) {
    return sdl2javaJNI.SDL_ReadBE32(SDL_RWops.getCPtr(src), src);
  }

  public static java.math.BigInteger SDL_ReadLE64(SDL_RWops src) {
    return sdl2javaJNI.SDL_ReadLE64(SDL_RWops.getCPtr(src), src);
  }

  public static java.math.BigInteger SDL_ReadBE64(SDL_RWops src) {
    return sdl2javaJNI.SDL_ReadBE64(SDL_RWops.getCPtr(src), src);
  }

  public static long SDL_WriteU8(SDL_RWops dst, short value) {
    return sdl2javaJNI.SDL_WriteU8(SDL_RWops.getCPtr(dst), dst, value);
  }

  public static long SDL_WriteLE16(SDL_RWops dst, int value) {
    return sdl2javaJNI.SDL_WriteLE16(SDL_RWops.getCPtr(dst), dst, value);
  }

  public static long SDL_WriteBE16(SDL_RWops dst, int value) {
    return sdl2javaJNI.SDL_WriteBE16(SDL_RWops.getCPtr(dst), dst, value);
  }

  public static long SDL_WriteLE32(SDL_RWops dst, long value) {
    return sdl2javaJNI.SDL_WriteLE32(SDL_RWops.getCPtr(dst), dst, value);
  }

  public static long SDL_WriteBE32(SDL_RWops dst, long value) {
    return sdl2javaJNI.SDL_WriteBE32(SDL_RWops.getCPtr(dst), dst, value);
  }

  public static long SDL_WriteLE64(SDL_RWops dst, java.math.BigInteger value) {
    return sdl2javaJNI.SDL_WriteLE64(SDL_RWops.getCPtr(dst), dst, value);
  }

  public static long SDL_WriteBE64(SDL_RWops dst, java.math.BigInteger value) {
    return sdl2javaJNI.SDL_WriteBE64(SDL_RWops.getCPtr(dst), dst, value);
  }

  public static SWIGTYPE_p_SDL_Thread SDL_CreateThread(SWIGTYPE_p_f_p_void__int fn, String name, SWIGTYPE_p_void data) {
    long cPtr = sdl2javaJNI.SDL_CreateThread(SWIGTYPE_p_f_p_void__int.getCPtr(fn), name, SWIGTYPE_p_void.getCPtr(data));
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Thread(cPtr, false);
  }

  public static String SDL_GetThreadName(SWIGTYPE_p_SDL_Thread thread) {
    return sdl2javaJNI.SDL_GetThreadName(SWIGTYPE_p_SDL_Thread.getCPtr(thread));
  }

  public static long SDL_ThreadID() {
    return sdl2javaJNI.SDL_ThreadID();
  }

  public static long SDL_GetThreadID(SWIGTYPE_p_SDL_Thread thread) {
    return sdl2javaJNI.SDL_GetThreadID(SWIGTYPE_p_SDL_Thread.getCPtr(thread));
  }

  public static int SDL_SetThreadPriority(SDL_ThreadPriority priority) {
    return sdl2javaJNI.SDL_SetThreadPriority(priority.swigValue());
  }

  public static void SDL_WaitThread(SWIGTYPE_p_SDL_Thread thread, SWIGTYPE_p_int status) {
    sdl2javaJNI.SDL_WaitThread(SWIGTYPE_p_SDL_Thread.getCPtr(thread), SWIGTYPE_p_int.getCPtr(status));
  }

  public static long SDL_TLSCreate() {
    return sdl2javaJNI.SDL_TLSCreate();
  }

  public static SWIGTYPE_p_void SDL_TLSGet(long id) {
    long cPtr = sdl2javaJNI.SDL_TLSGet(id);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static int SDL_TLSSet(long id, SWIGTYPE_p_void value, SWIGTYPE_p_f_p_void__void destructor) {
    return sdl2javaJNI.SDL_TLSSet(id, SWIGTYPE_p_void.getCPtr(value), SWIGTYPE_p_f_p_void__void.getCPtr(destructor));
  }

  public static long SDL_GetTicks() {
    return sdl2javaJNI.SDL_GetTicks();
  }

  public static java.math.BigInteger SDL_GetPerformanceCounter() {
    return sdl2javaJNI.SDL_GetPerformanceCounter();
  }

  public static java.math.BigInteger SDL_GetPerformanceFrequency() {
    return sdl2javaJNI.SDL_GetPerformanceFrequency();
  }

  public static void SDL_Delay(long ms) {
    sdl2javaJNI.SDL_Delay(ms);
  }

  public static int SDL_AddTimer(long interval, SWIGTYPE_p_f_unsigned_int_p_void__unsigned_int callback, SWIGTYPE_p_void param) {
    return sdl2javaJNI.SDL_AddTimer(interval, SWIGTYPE_p_f_unsigned_int_p_void__unsigned_int.getCPtr(callback), SWIGTYPE_p_void.getCPtr(param));
  }

  public static SDL_bool SDL_RemoveTimer(int id) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_RemoveTimer(id));
  }

  public static void SDL_GetVersion(SDL_version ver) {
    sdl2javaJNI.SDL_GetVersion(SDL_version.getCPtr(ver), ver);
  }

  public static String SDL_GetRevision() {
    return sdl2javaJNI.SDL_GetRevision();
  }

  public static int SDL_GetRevisionNumber() {
    return sdl2javaJNI.SDL_GetRevisionNumber();
  }

  public static SDL_Surface SDL_CreateRGBSurface(long flags, int width, int height, int depth, long Rmask, long Gmask, long Bmask, long Amask) {
    long cPtr = sdl2javaJNI.SDL_CreateRGBSurface(flags, width, height, depth, Rmask, Gmask, Bmask, Amask);
    return (cPtr == 0) ? null : new SDL_Surface(cPtr, false);
  }

  public static SDL_Surface SDL_CreateRGBSurfaceFrom(SWIGTYPE_p_void pixels, int width, int height, int depth, int pitch, long Rmask, long Gmask, long Bmask, long Amask) {
    long cPtr = sdl2javaJNI.SDL_CreateRGBSurfaceFrom(SWIGTYPE_p_void.getCPtr(pixels), width, height, depth, pitch, Rmask, Gmask, Bmask, Amask);
    return (cPtr == 0) ? null : new SDL_Surface(cPtr, false);
  }

  public static void SDL_FreeSurface(SDL_Surface surface) {
    sdl2javaJNI.SDL_FreeSurface(SDL_Surface.getCPtr(surface), surface);
  }

  public static int SDL_SetSurfacePalette(SDL_Surface surface, SWIGTYPE_p_SDL_Palette palette) {
    return sdl2javaJNI.SDL_SetSurfacePalette(SDL_Surface.getCPtr(surface), surface, SWIGTYPE_p_SDL_Palette.getCPtr(palette));
  }

  public static int SDL_LockSurface(SDL_Surface surface) {
    return sdl2javaJNI.SDL_LockSurface(SDL_Surface.getCPtr(surface), surface);
  }

  public static void SDL_UnlockSurface(SDL_Surface surface) {
    sdl2javaJNI.SDL_UnlockSurface(SDL_Surface.getCPtr(surface), surface);
  }

  public static SDL_Surface SDL_LoadBMP_RW(SDL_RWops src, int freesrc) {
    long cPtr = sdl2javaJNI.SDL_LoadBMP_RW(SDL_RWops.getCPtr(src), src, freesrc);
    return (cPtr == 0) ? null : new SDL_Surface(cPtr, false);
  }

  public static int SDL_SaveBMP_RW(SDL_Surface surface, SDL_RWops dst, int freedst) {
    return sdl2javaJNI.SDL_SaveBMP_RW(SDL_Surface.getCPtr(surface), surface, SDL_RWops.getCPtr(dst), dst, freedst);
  }

  public static int SDL_SetSurfaceRLE(SDL_Surface surface, int flag) {
    return sdl2javaJNI.SDL_SetSurfaceRLE(SDL_Surface.getCPtr(surface), surface, flag);
  }

  public static int SDL_SetColorKey(SDL_Surface surface, int flag, long key) {
    return sdl2javaJNI.SDL_SetColorKey(SDL_Surface.getCPtr(surface), surface, flag, key);
  }

  public static int SDL_GetColorKey(SDL_Surface surface, SWIGTYPE_p_unsigned_int key) {
    return sdl2javaJNI.SDL_GetColorKey(SDL_Surface.getCPtr(surface), surface, SWIGTYPE_p_unsigned_int.getCPtr(key));
  }

  public static int SDL_SetSurfaceColorMod(SDL_Surface surface, short r, short g, short b) {
    return sdl2javaJNI.SDL_SetSurfaceColorMod(SDL_Surface.getCPtr(surface), surface, r, g, b);
  }

  public static int SDL_GetSurfaceColorMod(SDL_Surface surface, SWIGTYPE_p_unsigned_char r, SWIGTYPE_p_unsigned_char g, SWIGTYPE_p_unsigned_char b) {
    return sdl2javaJNI.SDL_GetSurfaceColorMod(SDL_Surface.getCPtr(surface), surface, SWIGTYPE_p_unsigned_char.getCPtr(r), SWIGTYPE_p_unsigned_char.getCPtr(g), SWIGTYPE_p_unsigned_char.getCPtr(b));
  }

  public static int SDL_SetSurfaceAlphaMod(SDL_Surface surface, short alpha) {
    return sdl2javaJNI.SDL_SetSurfaceAlphaMod(SDL_Surface.getCPtr(surface), surface, alpha);
  }

  public static int SDL_GetSurfaceAlphaMod(SDL_Surface surface, SWIGTYPE_p_unsigned_char alpha) {
    return sdl2javaJNI.SDL_GetSurfaceAlphaMod(SDL_Surface.getCPtr(surface), surface, SWIGTYPE_p_unsigned_char.getCPtr(alpha));
  }

  public static int SDL_SetSurfaceBlendMode(SDL_Surface surface, SWIGTYPE_p_SDL_BlendMode blendMode) {
    return sdl2javaJNI.SDL_SetSurfaceBlendMode(SDL_Surface.getCPtr(surface), surface, SWIGTYPE_p_SDL_BlendMode.getCPtr(blendMode));
  }

  public static int SDL_GetSurfaceBlendMode(SDL_Surface surface, SWIGTYPE_p_SDL_BlendMode blendMode) {
    return sdl2javaJNI.SDL_GetSurfaceBlendMode(SDL_Surface.getCPtr(surface), surface, SWIGTYPE_p_SDL_BlendMode.getCPtr(blendMode));
  }

  public static SDL_bool SDL_SetClipRect(SDL_Surface surface, SDL_Rect rect) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_SetClipRect(SDL_Surface.getCPtr(surface), surface, SDL_Rect.getCPtr(rect), rect));
  }

  public static void SDL_GetClipRect(SDL_Surface surface, SDL_Rect rect) {
    sdl2javaJNI.SDL_GetClipRect(SDL_Surface.getCPtr(surface), surface, SDL_Rect.getCPtr(rect), rect);
  }

  public static SDL_Surface SDL_ConvertSurface(SDL_Surface src, SWIGTYPE_p_SDL_PixelFormat fmt, long flags) {
    long cPtr = sdl2javaJNI.SDL_ConvertSurface(SDL_Surface.getCPtr(src), src, SWIGTYPE_p_SDL_PixelFormat.getCPtr(fmt), flags);
    return (cPtr == 0) ? null : new SDL_Surface(cPtr, false);
  }

  public static SDL_Surface SDL_ConvertSurfaceFormat(SDL_Surface src, long pixel_format, long flags) {
    long cPtr = sdl2javaJNI.SDL_ConvertSurfaceFormat(SDL_Surface.getCPtr(src), src, pixel_format, flags);
    return (cPtr == 0) ? null : new SDL_Surface(cPtr, false);
  }

  public static int SDL_ConvertPixels(int width, int height, long src_format, SWIGTYPE_p_void src, int src_pitch, long dst_format, SWIGTYPE_p_void dst, int dst_pitch) {
    return sdl2javaJNI.SDL_ConvertPixels(width, height, src_format, SWIGTYPE_p_void.getCPtr(src), src_pitch, dst_format, SWIGTYPE_p_void.getCPtr(dst), dst_pitch);
  }

  public static int SDL_FillRect(SDL_Surface dst, SDL_Rect rect, long color) {
    return sdl2javaJNI.SDL_FillRect(SDL_Surface.getCPtr(dst), dst, SDL_Rect.getCPtr(rect), rect, color);
  }

  public static int SDL_FillRects(SDL_Surface dst, SDL_Rect rects, int count, long color) {
    return sdl2javaJNI.SDL_FillRects(SDL_Surface.getCPtr(dst), dst, SDL_Rect.getCPtr(rects), rects, count, color);
  }

  public static int SDL_UpperBlit(SDL_Surface src, SDL_Rect srcrect, SDL_Surface dst, SDL_Rect dstrect) {
    return sdl2javaJNI.SDL_UpperBlit(SDL_Surface.getCPtr(src), src, SDL_Rect.getCPtr(srcrect), srcrect, SDL_Surface.getCPtr(dst), dst, SDL_Rect.getCPtr(dstrect), dstrect);
  }

  public static int SDL_LowerBlit(SDL_Surface src, SDL_Rect srcrect, SDL_Surface dst, SDL_Rect dstrect) {
    return sdl2javaJNI.SDL_LowerBlit(SDL_Surface.getCPtr(src), src, SDL_Rect.getCPtr(srcrect), srcrect, SDL_Surface.getCPtr(dst), dst, SDL_Rect.getCPtr(dstrect), dstrect);
  }

  public static int SDL_SoftStretch(SDL_Surface src, SDL_Rect srcrect, SDL_Surface dst, SDL_Rect dstrect) {
    return sdl2javaJNI.SDL_SoftStretch(SDL_Surface.getCPtr(src), src, SDL_Rect.getCPtr(srcrect), srcrect, SDL_Surface.getCPtr(dst), dst, SDL_Rect.getCPtr(dstrect), dstrect);
  }

  public static int SDL_UpperBlitScaled(SDL_Surface src, SDL_Rect srcrect, SDL_Surface dst, SDL_Rect dstrect) {
    return sdl2javaJNI.SDL_UpperBlitScaled(SDL_Surface.getCPtr(src), src, SDL_Rect.getCPtr(srcrect), srcrect, SDL_Surface.getCPtr(dst), dst, SDL_Rect.getCPtr(dstrect), dstrect);
  }

  public static int SDL_LowerBlitScaled(SDL_Surface src, SDL_Rect srcrect, SDL_Surface dst, SDL_Rect dstrect) {
    return sdl2javaJNI.SDL_LowerBlitScaled(SDL_Surface.getCPtr(src), src, SDL_Rect.getCPtr(srcrect), srcrect, SDL_Surface.getCPtr(dst), dst, SDL_Rect.getCPtr(dstrect), dstrect);
  }

  public static int SDL_GetNumVideoDrivers() {
    return sdl2javaJNI.SDL_GetNumVideoDrivers();
  }

  public static String SDL_GetVideoDriver(int index) {
    return sdl2javaJNI.SDL_GetVideoDriver(index);
  }

  public static int SDL_VideoInit(String driver_name) {
    return sdl2javaJNI.SDL_VideoInit(driver_name);
  }

  public static void SDL_VideoQuit() {
    sdl2javaJNI.SDL_VideoQuit();
  }

  public static String SDL_GetCurrentVideoDriver() {
    return sdl2javaJNI.SDL_GetCurrentVideoDriver();
  }

  public static int SDL_GetNumVideoDisplays() {
    return sdl2javaJNI.SDL_GetNumVideoDisplays();
  }

  public static String SDL_GetDisplayName(int displayIndex) {
    return sdl2javaJNI.SDL_GetDisplayName(displayIndex);
  }

  public static int SDL_GetDisplayBounds(int displayIndex, SDL_Rect rect) {
    return sdl2javaJNI.SDL_GetDisplayBounds(displayIndex, SDL_Rect.getCPtr(rect), rect);
  }

  public static int SDL_GetNumDisplayModes(int displayIndex) {
    return sdl2javaJNI.SDL_GetNumDisplayModes(displayIndex);
  }

  public static int SDL_GetDisplayMode(int displayIndex, int modeIndex, SDL_DisplayMode mode) {
    return sdl2javaJNI.SDL_GetDisplayMode(displayIndex, modeIndex, SDL_DisplayMode.getCPtr(mode), mode);
  }

  public static int SDL_GetDesktopDisplayMode(int displayIndex, SDL_DisplayMode mode) {
    return sdl2javaJNI.SDL_GetDesktopDisplayMode(displayIndex, SDL_DisplayMode.getCPtr(mode), mode);
  }

  public static int SDL_GetCurrentDisplayMode(int displayIndex, SDL_DisplayMode mode) {
    return sdl2javaJNI.SDL_GetCurrentDisplayMode(displayIndex, SDL_DisplayMode.getCPtr(mode), mode);
  }

  public static SDL_DisplayMode SDL_GetClosestDisplayMode(int displayIndex, SDL_DisplayMode mode, SDL_DisplayMode closest) {
    long cPtr = sdl2javaJNI.SDL_GetClosestDisplayMode(displayIndex, SDL_DisplayMode.getCPtr(mode), mode, SDL_DisplayMode.getCPtr(closest), closest);
    return (cPtr == 0) ? null : new SDL_DisplayMode(cPtr, false);
  }

  public static int SDL_GetWindowDisplayIndex(SWIGTYPE_p_SDL_Window window) {
    return sdl2javaJNI.SDL_GetWindowDisplayIndex(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static int SDL_SetWindowDisplayMode(SWIGTYPE_p_SDL_Window window, SDL_DisplayMode mode) {
    return sdl2javaJNI.SDL_SetWindowDisplayMode(SWIGTYPE_p_SDL_Window.getCPtr(window), SDL_DisplayMode.getCPtr(mode), mode);
  }

  public static int SDL_GetWindowDisplayMode(SWIGTYPE_p_SDL_Window window, SDL_DisplayMode mode) {
    return sdl2javaJNI.SDL_GetWindowDisplayMode(SWIGTYPE_p_SDL_Window.getCPtr(window), SDL_DisplayMode.getCPtr(mode), mode);
  }

  public static long SDL_GetWindowPixelFormat(SWIGTYPE_p_SDL_Window window) {
    return sdl2javaJNI.SDL_GetWindowPixelFormat(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static SWIGTYPE_p_SDL_Window SDL_CreateWindow(String title, int x, int y, int w, int h, long flags) {
    long cPtr = sdl2javaJNI.SDL_CreateWindow(title, x, y, w, h, flags);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Window(cPtr, false);
  }

  public static SWIGTYPE_p_SDL_Window SDL_CreateWindowFrom(SWIGTYPE_p_void data) {
    long cPtr = sdl2javaJNI.SDL_CreateWindowFrom(SWIGTYPE_p_void.getCPtr(data));
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Window(cPtr, false);
  }

  public static long SDL_GetWindowID(SWIGTYPE_p_SDL_Window window) {
    return sdl2javaJNI.SDL_GetWindowID(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static SWIGTYPE_p_SDL_Window SDL_GetWindowFromID(long id) {
    long cPtr = sdl2javaJNI.SDL_GetWindowFromID(id);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Window(cPtr, false);
  }

  public static long SDL_GetWindowFlags(SWIGTYPE_p_SDL_Window window) {
    return sdl2javaJNI.SDL_GetWindowFlags(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static void SDL_SetWindowTitle(SWIGTYPE_p_SDL_Window window, String title) {
    sdl2javaJNI.SDL_SetWindowTitle(SWIGTYPE_p_SDL_Window.getCPtr(window), title);
  }

  public static String SDL_GetWindowTitle(SWIGTYPE_p_SDL_Window window) {
    return sdl2javaJNI.SDL_GetWindowTitle(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static void SDL_SetWindowIcon(SWIGTYPE_p_SDL_Window window, SDL_Surface icon) {
    sdl2javaJNI.SDL_SetWindowIcon(SWIGTYPE_p_SDL_Window.getCPtr(window), SDL_Surface.getCPtr(icon), icon);
  }

  public static SWIGTYPE_p_void SDL_SetWindowData(SWIGTYPE_p_SDL_Window window, String name, SWIGTYPE_p_void userdata) {
    long cPtr = sdl2javaJNI.SDL_SetWindowData(SWIGTYPE_p_SDL_Window.getCPtr(window), name, SWIGTYPE_p_void.getCPtr(userdata));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void SDL_GetWindowData(SWIGTYPE_p_SDL_Window window, String name) {
    long cPtr = sdl2javaJNI.SDL_GetWindowData(SWIGTYPE_p_SDL_Window.getCPtr(window), name);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void SDL_SetWindowPosition(SWIGTYPE_p_SDL_Window window, int x, int y) {
    sdl2javaJNI.SDL_SetWindowPosition(SWIGTYPE_p_SDL_Window.getCPtr(window), x, y);
  }

  public static void SDL_GetWindowPosition(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_int x, SWIGTYPE_p_int y) {
    sdl2javaJNI.SDL_GetWindowPosition(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_int.getCPtr(x), SWIGTYPE_p_int.getCPtr(y));
  }

  public static void SDL_SetWindowSize(SWIGTYPE_p_SDL_Window window, int w, int h) {
    sdl2javaJNI.SDL_SetWindowSize(SWIGTYPE_p_SDL_Window.getCPtr(window), w, h);
  }

  public static void SDL_GetWindowSize(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_int w, SWIGTYPE_p_int h) {
    sdl2javaJNI.SDL_GetWindowSize(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_int.getCPtr(w), SWIGTYPE_p_int.getCPtr(h));
  }

  public static void SDL_SetWindowMinimumSize(SWIGTYPE_p_SDL_Window window, int min_w, int min_h) {
    sdl2javaJNI.SDL_SetWindowMinimumSize(SWIGTYPE_p_SDL_Window.getCPtr(window), min_w, min_h);
  }

  public static void SDL_GetWindowMinimumSize(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_int w, SWIGTYPE_p_int h) {
    sdl2javaJNI.SDL_GetWindowMinimumSize(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_int.getCPtr(w), SWIGTYPE_p_int.getCPtr(h));
  }

  public static void SDL_SetWindowMaximumSize(SWIGTYPE_p_SDL_Window window, int max_w, int max_h) {
    sdl2javaJNI.SDL_SetWindowMaximumSize(SWIGTYPE_p_SDL_Window.getCPtr(window), max_w, max_h);
  }

  public static void SDL_GetWindowMaximumSize(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_int w, SWIGTYPE_p_int h) {
    sdl2javaJNI.SDL_GetWindowMaximumSize(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_int.getCPtr(w), SWIGTYPE_p_int.getCPtr(h));
  }

  public static void SDL_SetWindowBordered(SWIGTYPE_p_SDL_Window window, SDL_bool bordered) {
    sdl2javaJNI.SDL_SetWindowBordered(SWIGTYPE_p_SDL_Window.getCPtr(window), bordered.swigValue());
  }

  public static void SDL_ShowWindow(SWIGTYPE_p_SDL_Window window) {
    sdl2javaJNI.SDL_ShowWindow(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static void SDL_HideWindow(SWIGTYPE_p_SDL_Window window) {
    sdl2javaJNI.SDL_HideWindow(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static void SDL_RaiseWindow(SWIGTYPE_p_SDL_Window window) {
    sdl2javaJNI.SDL_RaiseWindow(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static void SDL_MaximizeWindow(SWIGTYPE_p_SDL_Window window) {
    sdl2javaJNI.SDL_MaximizeWindow(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static void SDL_MinimizeWindow(SWIGTYPE_p_SDL_Window window) {
    sdl2javaJNI.SDL_MinimizeWindow(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static void SDL_RestoreWindow(SWIGTYPE_p_SDL_Window window) {
    sdl2javaJNI.SDL_RestoreWindow(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static int SDL_SetWindowFullscreen(SWIGTYPE_p_SDL_Window window, long flags) {
    return sdl2javaJNI.SDL_SetWindowFullscreen(SWIGTYPE_p_SDL_Window.getCPtr(window), flags);
  }

  public static SDL_Surface SDL_GetWindowSurface(SWIGTYPE_p_SDL_Window window) {
    long cPtr = sdl2javaJNI.SDL_GetWindowSurface(SWIGTYPE_p_SDL_Window.getCPtr(window));
    return (cPtr == 0) ? null : new SDL_Surface(cPtr, false);
  }

  public static int SDL_UpdateWindowSurface(SWIGTYPE_p_SDL_Window window) {
    return sdl2javaJNI.SDL_UpdateWindowSurface(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static int SDL_UpdateWindowSurfaceRects(SWIGTYPE_p_SDL_Window window, SDL_Rect rects, int numrects) {
    return sdl2javaJNI.SDL_UpdateWindowSurfaceRects(SWIGTYPE_p_SDL_Window.getCPtr(window), SDL_Rect.getCPtr(rects), rects, numrects);
  }

  public static void SDL_SetWindowGrab(SWIGTYPE_p_SDL_Window window, SDL_bool grabbed) {
    sdl2javaJNI.SDL_SetWindowGrab(SWIGTYPE_p_SDL_Window.getCPtr(window), grabbed.swigValue());
  }

  public static SDL_bool SDL_GetWindowGrab(SWIGTYPE_p_SDL_Window window) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_GetWindowGrab(SWIGTYPE_p_SDL_Window.getCPtr(window)));
  }

  public static int SDL_SetWindowBrightness(SWIGTYPE_p_SDL_Window window, float brightness) {
    return sdl2javaJNI.SDL_SetWindowBrightness(SWIGTYPE_p_SDL_Window.getCPtr(window), brightness);
  }

  public static float SDL_GetWindowBrightness(SWIGTYPE_p_SDL_Window window) {
    return sdl2javaJNI.SDL_GetWindowBrightness(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static int SDL_SetWindowGammaRamp(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_unsigned_short red, SWIGTYPE_p_unsigned_short green, SWIGTYPE_p_unsigned_short blue) {
    return sdl2javaJNI.SDL_SetWindowGammaRamp(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_unsigned_short.getCPtr(red), SWIGTYPE_p_unsigned_short.getCPtr(green), SWIGTYPE_p_unsigned_short.getCPtr(blue));
  }

  public static int SDL_GetWindowGammaRamp(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_unsigned_short red, SWIGTYPE_p_unsigned_short green, SWIGTYPE_p_unsigned_short blue) {
    return sdl2javaJNI.SDL_GetWindowGammaRamp(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_unsigned_short.getCPtr(red), SWIGTYPE_p_unsigned_short.getCPtr(green), SWIGTYPE_p_unsigned_short.getCPtr(blue));
  }

  public static void SDL_DestroyWindow(SWIGTYPE_p_SDL_Window window) {
    sdl2javaJNI.SDL_DestroyWindow(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static SDL_bool SDL_IsScreenSaverEnabled() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_IsScreenSaverEnabled());
  }

  public static void SDL_EnableScreenSaver() {
    sdl2javaJNI.SDL_EnableScreenSaver();
  }

  public static void SDL_DisableScreenSaver() {
    sdl2javaJNI.SDL_DisableScreenSaver();
  }

  public static int SDL_GL_LoadLibrary(String path) {
    return sdl2javaJNI.SDL_GL_LoadLibrary(path);
  }

  public static SWIGTYPE_p_void SDL_GL_GetProcAddress(String proc) {
    long cPtr = sdl2javaJNI.SDL_GL_GetProcAddress(proc);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void SDL_GL_UnloadLibrary() {
    sdl2javaJNI.SDL_GL_UnloadLibrary();
  }

  public static SDL_bool SDL_GL_ExtensionSupported(String extension) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_GL_ExtensionSupported(extension));
  }

  public static int SDL_GL_SetAttribute(SDL_GLattr attr, int value) {
    return sdl2javaJNI.SDL_GL_SetAttribute(attr.swigValue(), value);
  }

  public static int SDL_GL_GetAttribute(SDL_GLattr attr, SWIGTYPE_p_int value) {
    return sdl2javaJNI.SDL_GL_GetAttribute(attr.swigValue(), SWIGTYPE_p_int.getCPtr(value));
  }

  public static SWIGTYPE_p_void SDL_GL_CreateContext(SWIGTYPE_p_SDL_Window window) {
    long cPtr = sdl2javaJNI.SDL_GL_CreateContext(SWIGTYPE_p_SDL_Window.getCPtr(window));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static int SDL_GL_MakeCurrent(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_void context) {
    return sdl2javaJNI.SDL_GL_MakeCurrent(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_void.getCPtr(context));
  }

  public static SWIGTYPE_p_SDL_Window SDL_GL_GetCurrentWindow() {
    long cPtr = sdl2javaJNI.SDL_GL_GetCurrentWindow();
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Window(cPtr, false);
  }

  public static SWIGTYPE_p_void SDL_GL_GetCurrentContext() {
    long cPtr = sdl2javaJNI.SDL_GL_GetCurrentContext();
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static int SDL_GL_SetSwapInterval(int interval) {
    return sdl2javaJNI.SDL_GL_SetSwapInterval(interval);
  }

  public static int SDL_GL_GetSwapInterval() {
    return sdl2javaJNI.SDL_GL_GetSwapInterval();
  }

  public static void SDL_GL_SwapWindow(SWIGTYPE_p_SDL_Window window) {
    sdl2javaJNI.SDL_GL_SwapWindow(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static void SDL_GL_DeleteContext(SWIGTYPE_p_void context) {
    sdl2javaJNI.SDL_GL_DeleteContext(SWIGTYPE_p_void.getCPtr(context));
  }

  public static SWIGTYPE_p_SDL_Window SDL_GetKeyboardFocus() {
    long cPtr = sdl2javaJNI.SDL_GetKeyboardFocus();
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Window(cPtr, false);
  }

  public static SWIGTYPE_p_unsigned_char SDL_GetKeyboardState(SWIGTYPE_p_int numkeys) {
    long cPtr = sdl2javaJNI.SDL_GetKeyboardState(SWIGTYPE_p_int.getCPtr(numkeys));
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
  }

  public static SDL_Keymod SDL_GetModState() {
    return SDL_Keymod.swigToEnum(sdl2javaJNI.SDL_GetModState());
  }

  public static void SDL_SetModState(SDL_Keymod modstate) {
    sdl2javaJNI.SDL_SetModState(modstate.swigValue());
  }

  public static int SDL_GetKeyFromScancode(SDL_Scancode scancode) {
    return sdl2javaJNI.SDL_GetKeyFromScancode(scancode.swigValue());
  }

  public static SDL_Scancode SDL_GetScancodeFromKey(int key) {
    return SDL_Scancode.swigToEnum(sdl2javaJNI.SDL_GetScancodeFromKey(key));
  }

  public static String SDL_GetScancodeName(SDL_Scancode scancode) {
    return sdl2javaJNI.SDL_GetScancodeName(scancode.swigValue());
  }

  public static SDL_Scancode SDL_GetScancodeFromName(String name) {
    return SDL_Scancode.swigToEnum(sdl2javaJNI.SDL_GetScancodeFromName(name));
  }

  public static String SDL_GetKeyName(int key) {
    return sdl2javaJNI.SDL_GetKeyName(key);
  }

  public static int SDL_GetKeyFromName(String name) {
    return sdl2javaJNI.SDL_GetKeyFromName(name);
  }

  public static void SDL_StartTextInput() {
    sdl2javaJNI.SDL_StartTextInput();
  }

  public static SDL_bool SDL_IsTextInputActive() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_IsTextInputActive());
  }

  public static void SDL_StopTextInput() {
    sdl2javaJNI.SDL_StopTextInput();
  }

  public static void SDL_SetTextInputRect(SDL_Rect rect) {
    sdl2javaJNI.SDL_SetTextInputRect(SDL_Rect.getCPtr(rect), rect);
  }

  public static SDL_bool SDL_HasScreenKeyboardSupport() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasScreenKeyboardSupport());
  }

  public static SDL_bool SDL_IsScreenKeyboardShown(SWIGTYPE_p_SDL_Window window) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_IsScreenKeyboardShown(SWIGTYPE_p_SDL_Window.getCPtr(window)));
  }

}
