/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.libsdl2;

public final class SDL_Keymod {
  public final static SDL_Keymod KMOD_NONE = new SDL_Keymod("KMOD_NONE", sdl2javaJNI.KMOD_NONE_get());
  public final static SDL_Keymod KMOD_LSHIFT = new SDL_Keymod("KMOD_LSHIFT", sdl2javaJNI.KMOD_LSHIFT_get());
  public final static SDL_Keymod KMOD_RSHIFT = new SDL_Keymod("KMOD_RSHIFT", sdl2javaJNI.KMOD_RSHIFT_get());
  public final static SDL_Keymod KMOD_LCTRL = new SDL_Keymod("KMOD_LCTRL", sdl2javaJNI.KMOD_LCTRL_get());
  public final static SDL_Keymod KMOD_RCTRL = new SDL_Keymod("KMOD_RCTRL", sdl2javaJNI.KMOD_RCTRL_get());
  public final static SDL_Keymod KMOD_LALT = new SDL_Keymod("KMOD_LALT", sdl2javaJNI.KMOD_LALT_get());
  public final static SDL_Keymod KMOD_RALT = new SDL_Keymod("KMOD_RALT", sdl2javaJNI.KMOD_RALT_get());
  public final static SDL_Keymod KMOD_LGUI = new SDL_Keymod("KMOD_LGUI", sdl2javaJNI.KMOD_LGUI_get());
  public final static SDL_Keymod KMOD_RGUI = new SDL_Keymod("KMOD_RGUI", sdl2javaJNI.KMOD_RGUI_get());
  public final static SDL_Keymod KMOD_NUM = new SDL_Keymod("KMOD_NUM", sdl2javaJNI.KMOD_NUM_get());
  public final static SDL_Keymod KMOD_CAPS = new SDL_Keymod("KMOD_CAPS", sdl2javaJNI.KMOD_CAPS_get());
  public final static SDL_Keymod KMOD_MODE = new SDL_Keymod("KMOD_MODE", sdl2javaJNI.KMOD_MODE_get());
  public final static SDL_Keymod KMOD_RESERVED = new SDL_Keymod("KMOD_RESERVED", sdl2javaJNI.KMOD_RESERVED_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static SDL_Keymod swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + SDL_Keymod.class + " with value " + swigValue);
  }

  private SDL_Keymod(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private SDL_Keymod(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private SDL_Keymod(String swigName, SDL_Keymod swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static SDL_Keymod[] swigValues = { KMOD_NONE, KMOD_LSHIFT, KMOD_RSHIFT, KMOD_LCTRL, KMOD_RCTRL, KMOD_LALT, KMOD_RALT, KMOD_LGUI, KMOD_RGUI, KMOD_NUM, KMOD_CAPS, KMOD_MODE, KMOD_RESERVED };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

